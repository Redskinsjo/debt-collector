{"version":3,"sources":["../lib/getFilesList.ts","../lib/filterRules.ts","../lib/getfileRulesErrors.ts","../lib/getEslintRulesErrors.ts","../lib/getFileResult.ts","../lib/checkFileList.ts","../lib/compareHtmlReport.ts","../components/Reporter.tsx","../lib/utils.ts","../lib/validateConfig.ts","../lib/useValidatedConfig.ts","compare/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,eAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,eAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AAGA,IAAM,UAAU,GAAG;AAChB,EAAA,OAAO,EAAE,OAAO,CAAC,GAAR,EADO;AAEhB,EAAA,MAAM,EAAE,KAFQ;AAGhB,EAAA,sBAAsB,EAAE;AAHR,CAAnB;;AAMA,IAAM,WAAW,GAAG,UAAO,MAAP,EAAe,OAAf,EAAwB,UAAxB,EAAkC;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;AAC9C,MAAA,UAAU,GAAG,UAAU,GAAG,UAAH,GAAgB,MAAM,CAAC,WAA9C;;AAEN,UAAI,OAAJ,EAAa;AACX,eAAA,CAAA;AAAA;AAAA,UAAO,IAAI,OAAJ,CAAY,UAAO,OAAP,EAAgB,MAAhB,EAAsB;AAAA,iBAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;AACjC,kBAAA,GAAG,GAAG,CAAA,GAAA,YAAA,CAAA,OAAA,EAAU,UAAV,CAAN;AACa,yBAAA,CAAA;AAAA;AAAA,oBAAM,GAAG,CAAC,QAAJ,CAAa,CAAC,iBAAD,CAAb,CAAN,CAAA;;;AAAb,kBAAA,UAAU,GAAG,EAAA,CAAA,IAAA,EAAb;AACU,yBAAA,CAAA;AAAA;AAAA,oBAAM,GAAG,CAAC,IAAJ,CAAS,CAAC,OAAD,EAAU,eAAV,CAAT,CAAN,CAAA;;;AAAV,kBAAA,OAAO,GAAG,EAAA,CAAA,IAAA,EAAV;AACA,kBAAA,aAAa,GAAG,MAAA,CAAA,OAAA,CAAK,QAAL,CAAc,UAAd,EAA0B,OAAO,CAAC,GAAR,EAA1B,CAAhB;AACA,kBAAA,gBAAgB,GAAG,OAAO,CAC7B,OADsB,CACd,KADc,EACP,GADO,EAEtB,KAFsB,CAEhB,IAFgB,EAGtB,MAHsB,CAGf,UAAA,IAAA,EAAI;AAAI,2BAAA,IAAI,KAAK,EAAT;AAAW,mBAHJ,EAItB,GAJsB,CAIlB,UAAA,IAAA,EAAI;AACD,wBAAA,EAAA,GAAA,MAAA,CAAqB,IAAI,CAAC,KAAL,CAAW,GAAX,CAArB,EAAoC,CAApC,CAAA;AAAA,wBAAC,MAAM,GAAA,EAAA,CAAA,CAAA,CAAP;AAAA,wBAAS,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAjB;;AAEN,2BAAO;AACL,sBAAA,MAAM,EAAA,MADD;AAEL,sBAAA,QAAQ,EAAE,MAAA,CAAA,OAAA,CAAK,QAAL,CAAc,aAAd,EAA6B,QAA7B;AAFL,qBAAP;AAID,mBAXsB,CAAnB;AAaA,kBAAA,KAAK,GAAG,gBAAgB,CAAC,MAAjB,CAAwB,UAAC,IAAD,EAAK;AAAK,2BAAA,CAAA,GAAA,WAAA,CAAA,OAAA,EAC9C,IAAI,CAAC,QADyC,EAE9C,UAAU,CAAC,OAAX,CAAmB,IAAnB,EAAyB,EAAzB,CAF8C,CAAA;AAG/C,mBAHa,EAGX,GAHW,CAGP,UAAC,IAAD,EAAK;AAAK,2BAAA,IAAI,CAAC,QAAL;AAAa,mBAHhB,CAAR;AAKN,kBAAA,OAAO,CAAC,KAAD,CAAP;;;;;;WAvBuC,CAAA;AAwBxC,SAxBM,CAAP,CAAA;AAyBD;;AAED,aAAA,CAAA;AAAA;AAAA,QAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAgB;AACjC,SAAA,GAAA,MAAA,CAAA,OAAA,EAAK,UAAL,EAAiB,EAAjB,EAAqB,UAAC,GAAD,EAAM,KAAN,EAAW;AAC9B,cAAI,GAAJ,EAAS,MAAM,CAAC,GAAD,CAAN;AACT,cAAM,aAAa,GAAG,KAAK,CAAC,GAAN,CAAU,UAAC,IAAD,EAAK;AAAK,mBAAA,IAAI,CAAC,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAA;AAAsB,WAA1C,EAA4C,MAA5C,CAAmD,UAAA,IAAA,EAAI;AAAI,mBAAA,IAAI,CAAC,QAAL,CAAc,GAAd,CAAA;AAAkB,WAA7E,CAAtB;AACA,UAAA,OAAO,CAAC,aAAD,CAAP;AACD,SAJD;AAKD,OANM,CAAP,CAAA;;GA/BoD,CAAA;AAsCrD,CAtCD;;AAwCA,OAAA,CAAA,OAAA,GAAe,WAAf;;;;;;;;;;;;;;;ACpDA,IAAA,WAAA,GAAA,eAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AAEA,IAAM,aAAa,GAAG,UAAC,EAAD,EAAyB,IAAzB,EAA6B;MAA1B,EAAA,GAAA,EAAA,CAAA;MAAA,SAAS,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,MAAH,GAAS;;AACzC,MAAI,OAAO,SAAP,KAAqB,QAAzB,EAAmC;AACjC,WAAO,CAAA,GAAA,WAAA,CAAA,OAAA,EACL,IAAI,CAAC,OAAL,CAAa,IAAb,EAAmB,EAAnB,CADK,EAEL,SAAS,CAAC,OAAV,CAAkB,IAAlB,EAAwB,EAAxB,CAFK,CAAP;AAID;;AAED,MAAI,KAAK,CAAC,OAAN,CAAc,SAAd,CAAJ,EAA8B;AAC5B,WAAO,SAAS,CAAC,MAAV,CAAiB,UAAC,IAAD,EAAK;AAAK,aAAA,CAAA,GAAA,WAAA,CAAA,OAAA,EAChC,IAAI,CAAC,OAAL,CAAa,IAAb,EAAmB,EAAnB,CADgC,EAEhC,IAAI,CAAC,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAFgC,CAAA;AAGjC,KAHM,EAGJ,MAHI,GAGK,CAHZ;AAID;AACF,CAdD;;AAgBO,IAAM,eAAe,GAAG,UAAC,OAAD,EAAU,QAAV,EAAkB;AAC/C,MAAM,SAAS,GAAG,OAAO,CAAC,SAAR,CAAkB,MAAlB,CAAyB,UAAC,IAAD,EAAK;AAAK,WAAA,aAAa,CAAC,IAAD,EAAO,QAAP,CAAb;AAA6B,GAAhE,CAAlB;AACA,MAAM,WAAW,GAAG,OAAO,CAAC,WAAR,CAAoB,MAApB,CAA2B,UAAC,IAAD,EAAK;AAAK,WAAA,aAAa,CAAC,IAAD,EAAO,QAAP,CAAb;AAA6B,GAAlE,CAApB;AAEA,SAAO;AACL,IAAA,SAAS,EAAA,SADJ;AAEL,IAAA,WAAW,EAAA;AAFN,GAAP;AAID,CARM;;AAAM,OAAA,CAAA,eAAA,GAAe,eAAf;;AAUb,IAAM,QAAQ,GAAG,UAAC,KAAD,EAAQ,MAAR,EAAgB,IAAhB,EAAoB;AAAK,SAAA,KAAK,CAC5C,MADuC,CAChC,UAAC,IAAD,EAAK;AAAK,WAAC,MAAM,GACrB,MAAM,KAAK,IAAI,CAAC,EADK,GAErB,IAFc;AAET,GAH+B,EAG7B,MAH6B,CAGtB,UAAC,IAAD,EAAK;AAAK,WAAE,IAAI,IAAI,IAAI,CAAC,MAAL,GAAc,CAAvB,GACzB,IAAI,CAAC,IAAL,CAAU,UAAC,GAAD,EAAI;AAAK,aAAA,IAAI,CAAC,IAAL,CAAU,QAAV,CAAmB,GAAnB,CAAA;AAAuB,KAA1C,CADyB,GAEzB,IAFwB;AAEnB,GAL+B,CAAA;AAK9B,CALZ;;AAOO,IAAM,uBAAuB,GAAG,UAAC,OAAD,EAAU,MAAV,EAAyB,IAAzB,EAAoC;AAA1B,MAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,IAAA;AAAa;;AAAE,MAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,IAAA;AAAW;;AACnE,MAAA,SAAS,GAAK,OAAO,CAAA,SAArB;AACA,MAAA,WAAW,GAAK,OAAO,CAAA,WAAvB;AACN,MAAM,QAAQ,GAAG,IAAI,IAAI,IAAI,CAAC,MAAL,CAAY,UAAC,GAAD,EAAI;AAAK,WAAA,CAAC,CAAC,GAAF;AAAK,GAA1B,CAAzB;;AAEA,MAAI,MAAM,KAAI,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,MAAd,CAAV,EAAgC;AAC9B,IAAA,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAT,EAAoB,MAApB,EAA4B,QAA5B,CAApB;AACA,IAAA,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,WAAT,EAAsB,MAAtB,EAA8B,QAA9B,CAAtB;AACD;;AAED,SAAO;AACL,IAAA,SAAS,EAAA,SADJ;AAEL,IAAA,WAAW,EAAA;AAFN,GAAP;AAID,CAdM;;AAAM,OAAA,CAAA,uBAAA,GAAuB,uBAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCb,IAAA,2BAAA,GAAA,eAAA,CAAA,OAAA,CAAA,2BAAA,CAAA,CAAA;;AAEA,IAAM,kBAAkB,GAAG,UAAC,MAAD,EAAS,IAAT,EAAe,IAAf,EAAmB;AAC5C,MAAM,cAAc,GAAG,IAAI,CAAC,OAAL,CAAa,IAAb,EAAmB,KAAnB,CAAyB,GAAzB,CAAvB;AACA,EAAA,cAAc,CAAC,MAAf,CAAsB,CAAC,CAAvB;;AAEA,MAAM,eAAe,GAAG,UAAC,GAAD,EAAI;AAC1B,QAAM,MAAM,GAAG,IAAI,MAAJ,CAAW,CAAA,GAAA,2BAAA,CAAA,OAAA,EAAmB,SAAA,MAAA,CAAS,GAAT,CAAnB,CAAX,EAA+C,GAA/C,CAAf;AACA,QAAM,GAAG,GAAG,IAAI,CAAC,QAAL,CAAc,MAAd,CAAZ;AACA,QAAM,MAAM,GAAG,KAAK,CAAC,IAAN,CAAW,GAAX,EAAgB,UAAA,CAAA,EAAC;AAAI,aAAA,CAAC,CAAC,CAAD,CAAD;AAAI,KAAzB,CAAf;AAEA,WAAO,MAAM,CAAC,MAAd;AACD,GAND;;AAQA,MAAM,IAAI,GAAG,UAAC,GAAD,EAAI;AACf,QAAM,MAAM,GAAG,IAAI,MAAJ,CAAW,CAAA,GAAA,2BAAA,CAAA,OAAA,EAAmB,GAAnB,CAAX,EAAoC,GAApC,CAAf;AACA,QAAM,GAAG,GAAG,IAAI,CAAC,QAAL,CAAc,MAAd,CAAZ;AACA,QAAM,MAAM,GAAG,KAAK,CAAC,IAAN,CAAW,GAAX,EAAgB,UAAA,CAAA,EAAC;AAAI,aAAA,CAAC,CAAC,CAAD,CAAD;AAAI,KAAzB,CAAf;AAEA,WAAO,MAAM,CAAC,MAAd;AACD,GAND;;AAQA,MAAM,KAAK,GAAG;AACZ,IAAA,cAAc,EAAE,cAAc,CAAC,MADnB;AAEZ,IAAA,OAAO,EAAE,IAFG;AAGZ,IAAA,IAAI,EAAA,IAHQ;AAIZ,IAAA,eAAe,EAAA,eAJH;AAKZ,IAAA,IAAI,EAAA;AALQ,GAAd;AAQA,SAAO,MAAM,CAAC,SAAP,CAAiB,MAAjB,CAAwB,UAAC,GAAD,EAAM,IAAN,EAAU;AACvC,QAAM,QAAQ,GAAG,IAAI,CAAC,SAAL,CAAc,QAAA,CAAA,EAAA,EAAK,KAAL,CAAd,CAAjB;;AAEA,QAAI,QAAQ,GAAG,CAAf,EAAkB;AAChB,aAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,MAAA,CACK,GADL,CAAA,EACQ,KADR,CAAA,EACQ,CACN;AACE,QAAA,QAAQ,EAAE,IAAI,CAAC,EADjB;AAEE,QAAA,UAAU,EAAE;AAFd,OADM,CADR,OAAA,CAAA;AAOD,KARD,MAQO;AACL,aAAO,GAAP;AACD;AACF,GAdM,EAcJ,EAdI,CAAP;AAeD,CA3CD;;AA6CA,OAAA,CAAA,OAAA,GAAe,kBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA,IAAM,oBAAoB,GAAG,UAAO,MAAP,EAAe,IAAf,EAAqB,IAArB,EAA2B,MAA3B,EAAiC;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;;;;;AAGhD,iBAAA,CAAA;AAAA;AAAA,YAAM,MAAM,CAAC,QAAP,CAAgB,IAAhB,EAAsB;AAAE,YAAA,WAAW,EAAE;AAAf,WAAtB,CAAN,CAAA;;;AAAV,UAAA,OAAO,GAAG,EAAA,CAAA,IAAA,EAAV;;;;;;;AAEA,UAAA,OAAO,GAAG,EAAV;;;;;;AAGI,UAAA,MAAM,GAAG,CAAA,EAAA,GAAA,OAAO,CAAC,CAAD,CAAP,MAAU,IAAV,IAAU,EAAA,KAAA,KAAA,CAAV,GAAU,KAAA,CAAV,GAAU,EAAA,CAAE,QAArB;;AAEA,UAAA,oBAAoB,GAAG,UAAC,MAAD,EAAO;AAAA,gBAAA,EAAA;;AAAK,mBAAA,CAAA,EAAA,GAAA,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAM,KAAA,CAAN,GAAA,MAAM,CAAE,MAAR,CAAe,UAAC,GAAD,EAAI;AAAK,qBAAA,GAAG,CAAC,MAAJ,KAAe,MAAf;AAAqB,aAA7C,EAA+C,MAA/C,MAAqD,IAArD,IAAqD,EAAA,KAAA,KAAA,CAArD,GAAqD,EAArD,GAAyD,CAAzD;AAA0D,WAA7F;;AACA,UAAA,wBAAwB,GAAG,UAAC,MAAD,EAAO;AACtC,gBAAI,MAAM,CAAC,MAAP,GAAgB,CAApB,EAAuB;AACrB,kBAAM,YAAY,GAAG,MAAM,CACxB,MADkB,CACX,UAAC,GAAD,EAAI;AAAK,uBAAA,GAAG,KAAK,IAAR,IAAgB,GAAG,CAAC,MAAJ,KAAe,IAA/B;AAAmC,eADjC,EAElB,MAFkB,CAEX,UAAC,GAAD,EAAI;AAAK,uBAAA,GAAG,CAAC,MAAJ,CAAW,UAAX,CAAsB,MAAtB,CAAA;AAA6B,eAF3B,CAArB;AAIA,qBAAO,YAAY,CAAC,MAApB;AACD;;AAED,mBAAO,CAAP;AACD,WAVK;;AAYA,UAAA,KAAK,GAAG;AACZ,YAAA,oBAAoB,EAAA,oBADR;AAEZ,YAAA,wBAAwB,EAAA,wBAFZ;AAGZ,YAAA,OAAO,EAAE,OAAO,CAAC,CAAD,CAHJ;AAIZ,YAAA,IAAI,EAAA;AAJQ,WAAR;AAON,iBAAA,CAAA;AAAA;AAAA,YAAO,MAAM,CAAC,WAAP,CAAmB,MAAnB,CAA0B,UAAC,GAAD,EAAM,IAAN,EAAU;AACzC,gBAAM,QAAQ,GAAG,IAAI,CAAC,eAAL,CAAoB,QAAA,CAAA,EAAA,EAAM,KAAN,CAApB,CAAjB;AAEA,mBAAO,QAAQ,GAAG,CAAX,GAAc,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,MAAA,CAChB,GADgB,CAAA,EACb,KADa,CAAA,EACb,CACN;AACE,cAAA,QAAQ,EAAE,IAAI,CAAC,EADjB;AAEE,cAAA,UAAU,EAAE;AAFd,aADM,CADa,OAAA,CAAd,GAMH,GANJ;AAOD,WAVM,EAUJ,EAVI,CAAP,CAAA;;;GA9B4D,CAAA;AAyC7D,CAzCD;;AA2CA,OAAA,CAAA,OAAA,GAAe,oBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,oBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;;AACA,IAAA,sBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,wBAAA,CAAA,CAAA;;AAEA,IAAM,EAAE,GAAG,OAAO,CAAC,IAAD,CAAlB;;AAEA,IAAM,aAAa,GAAG,UAAC,MAAD,EAAS,UAAT,EAAqB,WAArB,EAAkC,QAAlC,EAA0C;AAC9D,MAAM,kBAAkB,GAAA,QAAA,CAAA,EAAA,EACnB,WADmB,CAAxB;;AAGA,MAAI,UAAU,CAAC,MAAX,GAAoB,CAAxB,EAA2B;AACzB,IAAA,UAAU,CAAC,OAAX,CAAmB,UAAC,EAAD,EAAyB;UAAtB,QAAQ,GAAA,EAAA,CAAA;UAAE,UAAU,GAAA,EAAA,CAAA;AACxC,UAAM,IAAI,GAAG,MAAM,CAAC,QAAD,CAAN,CAAiB,IAAjB,CAAsB,UAAC,EAAD,EAAO;YAAJ,EAAE,GAAA,EAAA,CAAA;AAAO,eAAA,QAAQ,KAAK,EAAb;AAAe,OAAjD,CAAb;AAEA,MAAA,kBAAkB,CAAC,KAAnB,CAAyB,IAAzB,CAA6B,QAAA,CAAA,QAAA,CAAA,EAAA,EACxB,IADwB,CAAA,EACpB;AACP,QAAA,UAAU,EAAA;AADH,OADoB,CAA7B;AAKA,MAAA,kBAAkB,CAAC,UAAnB,IAAiC,IAAI,CAAC,SAAL,GAAiB,UAAlD;AACD,KATD;AAUD;;AACD,SAAO,kBAAP;AACD,CAjBD;;AAmBA,IAAM,aAAa,GAAG,UAAO,MAAP,EAAe,IAAf,EAAqB,MAArB,EAA2B;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;AAC3C,UAAA,WAAW,GAAG;AAChB,YAAA,IAAI,EAAA,IADY;AAEhB,YAAA,KAAK,EAAE,EAFS;AAGhB,YAAA,UAAU,EAAE;AAHI,WAAd;;AAMJ,cAAI,MAAM,CAAC,WAAP,CAAmB,MAAnB,KAA8B,CAA9B,IAAmC,MAAM,CAAC,SAAP,CAAiB,MAAjB,KAA4B,CAAnE,EAAsE;AACpE,mBAAA,CAAA;AAAA;AAAA,cAAO,WAAP,CAAA;AACD;;AAID,cAAI;AACF,YAAA,IAAI,GAAG,EAAE,CAAC,YAAH,CAAgB,IAAhB,EAAsB,QAAtB,EAAP;AACD,WAFD,CAEE,OAAO,KAAP,EAAc;AACd,YAAA,IAAI,GAAG,EAAP;AACD;;AAEK,UAAA,gBAAgB,GAAG,CAAA,GAAA,oBAAA,CAAA,OAAA,EAAmB,MAAnB,EAA2B,IAA3B,EAAiC,IAAjC,CAAnB;AACN,UAAA,WAAW,GAAG,aAAa,CACzB,MADyB,EAEzB,gBAFyB,EAGzB,WAHyB,EAIzB,WAJyB,CAA3B;AAOsB,iBAAA,CAAA;AAAA;AAAA,YAAM,CAAA,GAAA,sBAAA,CAAA,OAAA,EAAqB,MAArB,EAA6B,IAA7B,EAAmC,IAAnC,EAAyC,MAAzC,CAAN,CAAA;;;AAAhB,UAAA,aAAa,GAAG,EAAA,CAAA,IAAA,EAAhB;AAEN,UAAA,WAAW,GAAG,aAAa,CACzB,MADyB,EAEzB,aAFyB,EAGzB,WAHyB,EAIzB,aAJyB,CAA3B;AAOA,iBAAA,CAAA;AAAA;AAAA,YAAO,WAAP,CAAA;;;GApC+C,CAAA;AAqChD,CArCD;;AAuCA,IAAM,aAAa,GAAG,UAAO,MAAP,EAAe,IAAf,EAAqB,gBAArB,EAAuC,MAAvC,EAA6C;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;AAC3D,UAAA,YAAY,GAAG,CAAA,GAAA,aAAA,CAAA,eAAA,EAAgB,MAAhB,EAAwB,IAAxB,CAAf;AACa,iBAAA,CAAA;AAAA;AAAA,YAAM,aAAa,CAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAE/B,MAF+B,CAAA,EAG/B,YAH+B,CAAA,EAKpC,IALoC,EAMpC,MANoC,CAAnB,CAAA;;;AAAb,UAAA,UAAU,GAAG,EAAA,CAAA,IAAA,EAAb;AASN,UAAA,gBAAgB;AAEhB,iBAAA,CAAA;AAAA;AAAA,YAAO,UAAP,CAAA;;;GAbiE,CAAA;AAclE,CAdD;;AAgBA,OAAA,CAAA,OAAA,GAAe,aAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChFA,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAEA,IAAA,eAAA,GAAA,eAAA,CAAA,OAAA,CAAA,sBAAA,CAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AAEA,OAAA,CAAA,OAAA,GAAe,UAAO,QAAP,EAAiB,MAAjB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,SAArC,EAA8C;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;AACrD,UAAA,aAAa,GAAG,CAAA,GAAA,aAAA,CAAA,uBAAA,EAAwB,MAAxB,EAAgC,IAAhC,EAAsC,IAAtC,CAAhB;AAEA,UAAA,cAAc,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACf,MADe,CAAA,EAEf,aAFe,CAAd;AAKA,UAAA,MAAM,GAAG,IAAI,QAAA,CAAA,MAAJ,CAAW;AACxB,YAAA,WAAW,EAAE,KADW;AAExB,YAAA,UAAU,EAAE,MAAM,CAAC;AAFK,WAAX,CAAT;AAKA,UAAA,eAAe,GAAG,QAAQ,CAAC,GAAT,CAAa,UAAC,IAAD,EAAK;AAAK,mBAAA,CAAA,GAAA,eAAA,CAAA,OAAA,EAAc,cAAd,EAA8B,IAA9B,EAAoC,SAApC,EAA+C,MAA/C,CAAA;AAAsD,WAA7E,CAAlB;AACU,iBAAA,CAAA;AAAA;AAAA,YAAM,OAAO,CAAC,GAAR,CAAW,aAAA,CAAA,EAAA,EAAA,MAAA,CAAK,eAAL,CAAA,EAAoB,KAApB,CAAX,CAAN,CAAA;;;AAAV,UAAA,OAAO,GAAG,EAAA,CAAA,IAAA,EAAV;AAEN,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAP,CAAA;;;GAhB2D,CAAA;AAiB5D,CAjBD;;;;;;;;ACLA,IAAM,WAAW,GAAG,UAAC,IAAD,EAAK;AAAK,SAAA,+CAAA,MAAA,CAG5B,IAAI,CAAC,GAAL,CAAS,UAAC,IAAD,EAAK;AAAK,WAAA,IAAA,MAAA,CAAI,IAAI,CAAC,IAAT,EAAa,GAAb,EAAa,MAAb,CAAiB,IAAI,CAAC,GAAtB,EAAyB,GAAzB,EAAyB,MAAzB,CAA6B,IAAI,CAAC,OAAlC,EAAyC,GAAzC,EAAyC,MAAzC,CAA6C,IAAI,CAAC,KAAlD,EAAuD,GAAvD,CAAA;AAA0D,GAA7E,EAA+E,IAA/E,CAAoF,IAApF,CAH4B,EAG6D,IAH7D,CAAA;AAI7B,CAJD;;AAMA,IAAM,iBAAiB,GAAG,UAAC,IAAD,EAAK;AAAK,SAAA,kCAAA,MAAA,CAGlC,IAAI,CAAC,cAAL,CAAoB,MAApB,GAA6B,CAA7B,GAAiC,uDAAA,MAAA,CAGjC,WAAW,CAAC,IAAI,CAAC,cAAN,CAHsB,EAGD,IAHC,CAAjC,GAIE,IAPgC,EAO5B,MAP4B,EAO5B,MAP4B,CASlC,IAAI,CAAC,aAAL,CAAmB,MAAnB,GAA4B,CAA5B,GAAgC,uDAAA,MAAA,CAGhC,WAAW,CAAC,IAAI,CAAC,aAAN,CAHqB,EAGD,IAHC,CAAhC,GAIE,IAbgC,EAa5B,MAb4B,EAa5B,MAb4B,CAelC,IAAI,CAAC,aAAL,CAAmB,MAAnB,GAA4B,CAA5B,GAAgC,qDAAA,MAAA,CAGhC,WAAW,CAAC,IAAI,CAAC,aAAN,CAHqB,EAGD,IAHC,CAAhC,GAIE,IAnBgC,EAmB5B,mCAnB4B,EAmB5B,MAnB4B,CAsBZ,IAAI,CAAC,WAAL,CAAiB,GAAjB,CAAqB,QAArB,EAtBY,EAsBmB,yBAtBnB,EAsBmB,MAtBnB,CAuBb,IAAI,CAAC,WAAL,CAAiB,GAAjB,CAAqB,QAArB,EAvBa,EAuBkB,kBAvBlB,EAuBkB,MAvBlB,CAyBvB,IAAI,CAAC,WAAL,CAAiB,IAAI,CAAC,WAAL,CAAiB,KAAlC,CAzBuB,EAyBiB,cAzBjB,EAyBiB,MAzBjB,CA0B3B,IAAI,CAAC,WAAL,CAAiB,KAAjB,GAAyB,CAAzB,GAA6B,WAA7B,GAA2C,WA1BhB,EA0B2B,MA1B3B,EA0B2B,MA1B3B,CA0BkC,IAAI,CAAC,WAAL,CAAiB,KAAjB,CAAuB,QAAvB,EA1BlC,EA0BmE,yHA1BnE,CAAA;AA8BnC,CA9BD;;AAgCA,OAAA,CAAA,OAAA,GAAe,iBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA,IAAA,OAAA,GAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,eAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,KAAA,CAAA;;AACA,IAAA,IAAA,GAAA,eAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;;AACA,IAAA,mBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;AAEA,IAAM,SAAS,GAAG,GAAA,MAAA,CAAG,OAAO,CAAC,GAAR,EAAH,EAAgB,qCAAhB,CAAlB;AACA,IAAM,UAAU,GAAG,GAAA,MAAA,CAAG,SAAH,EAAY,cAAZ,CAAnB;;AAEA,IAAM,oBAAoB,GAAG,UAAC,GAAD,EAAM,GAAN,EAAS;AACpC,MAAI,GAAG,CAAC,MAAJ,GAAa,GAAjB,EAAsB,OAAO,GAAP;AACtB,MAAM,OAAO,GAAG,GAAG,CAAC,KAAJ,CAAU,EAAV,CAAhB;;AACA,MAAM,QAAQ,GAAG,aAAA,CAAA,EAAA,EAAA,MAAA,CAAI,OAAJ,CAAA,EAAW,KAAX,CAAA,CAAa,MAAb,CAAoB,UAAC,KAAD,EAAQ,CAAR,EAAS;AAAK,WAAA,CAAC,IAAI,CAAL,IAAU,CAAC,GAAG,GAAG,GAAG,CAApB;AAAqB,GAAvD,CAAjB;;AACA,MAAM,MAAM,GAAG,aAAA,CAAA,EAAA,EAAA,MAAA,CAAI,OAAJ,CAAA,EAAW,KAAX,CAAA,CAAa,MAAb,CAAoB,UAAC,KAAD,EAAQ,CAAR,EAAS;AAAK,WAAA,CAAC,GAAI,GAAG,CAAC,MAAJ,GAAa,GAAG,GAAG,CAAxB,IAA8B,CAAC,GAAG,GAAG,CAAC,MAAtC;AAA4C,GAA9E,CAAf;;AACA,SAAO,aAAA,CAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,MAAA,CAAI,QAAJ,CAAA,EAAY,KAAZ,CAAA,EAAY,CAAE,MAAF,CAAZ,EAAoB,KAApB,CAAA,EAAoB,MAAA,CAAK,MAAL,CAApB,EAA+B,KAA/B,CAAA,CAAiC,IAAjC,CAAsC,EAAtC,CAAP;AACD,CAND;;AAQA,IAAM,aAAa,GAAG,UAAC,OAAD,EAAQ;AAC5B,MAAM,eAAe,GAAG,OAAO,CAAC,MAAR,CAAe,UAAC,MAAD,EAAO;AAAK,WAAA,MAAM,CAAC,UAAP,GAAoB,CAApB;AAAqB,GAAhD,CAAxB;AACA,MAAM,cAAc,GAAG,eAAe,CAAC,GAAhB,CAAoB,UAAC,EAAD,EAA4B;QAAzB,IAAI,GAAA,EAAA,CAAA;QAAE,KAAK,GAAA,EAAA,CAAA;QAAE,UAAU,GAAA,EAAA,CAAA;AAAO,WAAC;AAC3E,MAAA,IAAI,EAAE,oBAAoB,CAAC,IAAD,EAAO,EAAP,CADiD;AAE3E,MAAA,UAAU,EAAA,UAFiE;AAG3E,MAAA,KAAK,EAAE,KAAK,CAAC,GAAN,CAAU,UAAC,EAAD,EAAiC;YAA9B,KAAK,GAAA,EAAA,CAAA;YAAE,UAAU,GAAA,EAAA,CAAA;YAAE,SAAS,GAAA,EAAA,CAAA;AAAO,eAAC;AACtD,UAAA,KAAK,EAAE,KAD+C;AAEtD,UAAA,EAAE,EAAE,UAFkD;AAGtD,UAAA,KAAK,EAAE,SAAS,GAAG;AAHmC,SAAD;AAIrD,OAJK;AAHoE,KAAD;AAQ1E,GARqB,CAAvB;AAUA,MAAM,cAAc,GAAG,cAAc,CAAC,MAAf,CAAsB,UAAC,GAAD,EAAM,GAAN,EAAS;AAAK,WAAA,GAAG,GAAG,GAAG,CAAC,UAAV;AAAoB,GAAxD,EAA0D,CAA1D,CAAvB;AAEA,SAAO;AACL,IAAA,cAAc,EAAA,cADT;AAEL,IAAA,cAAc,EAAA;AAFT,GAAP;AAID,CAlBD;;AAoBA,SAAgB,OAAhB,CAAwB,EAAxB,EAA6C;MAAnB,OAAO,GAAA,EAAA,CAAA;MAAE,QAAQ,GAAA,EAAA,CAAA;;AACnC,MAAA,EAAA,GAGF,aAAa,CAAC,OAAD,CAHX;AAAA,MACJ,cAAc,GAAA,EAAA,CAAA,cADV;AAAA,MAEJ,cAAc,GAAA,EAAA,CAAA,cAFV;;AAKN,MAAI,cAAc,GAAG,cAArB;;AAEA,MAAI,QAAJ,EAAc;AACZ,IAAA,cAAc,GAAG,cAAc,CAC5B,IADc,CACT,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,aAAA,CAAC,CAAC,UAAF,GAAe,CAAC,CAAC,UAAjB;AAA2B,KAD5B,EAEd,MAFc,CAEP,UAAC,KAAD,EAAQ,KAAR,EAAa;AAAK,aAAA,KAAK,GAAG,QAAR;AAAgB,KAF3B,CAAjB;AAGD;;AAED,SACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,OAAA,CAAA,OAAA,CAAA,QAAA,EAAA,IAAA,EACG,cAAc,CAAC,MAAf,GAAwB,CAAxB,IAA6B,cAAc,CAAC,GAAf,CAAmB,UAAC,MAAD,EAAO;AAAK,WAC3D,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,GAAD,EAAI;AAAC,MAAA,GAAG,EAAE,MAAM,CAAC,IAAb;AAAmB,MAAA,aAAa,EAAC,QAAjC;AAA0C,MAAA,SAAS,EAAE;AAArD,KAAJ,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,IAAD,EAAK;AAAC,MAAA,IAAI,EAAA,IAAL;AAAM,MAAA,KAAK,EAAC,KAAZ;AAAkB,MAAA,SAAS,EAAA;AAA3B,KAAL,EAAkC,MAAM,CAAC,IAAzC,CADF,EAEE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,WAAA,CAAA,OAAD,EAAM;AAAC,MAAA,IAAI,EAAE,MAAM,CAAC;AAAd,KAAN,CAFF,EAGE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,IAAD,EAAK;AAAC,MAAA,IAAI,EAAA,IAAL;AAAM,MAAA,KAAK,EAAC;AAAZ,KAAL,sBAAA,EAEG,MAAM,CAAC,UAFV,CAHF,CAD2D;AAS5D,GAT6B,CADhC,EAWE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,GAAD,EAAI;AAAC,IAAA,SAAS,EAAE;AAAZ,GAAJ,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,IAAD,EAAK;AAAC,IAAA,IAAI,EAAA,IAAL;AAAM,IAAA,eAAe,EAAC,SAAtB;AAAgC,IAAA,KAAK,EAAC;AAAtC,GAAL,EACG,GADH,gBAAA,EAGG,cAHH,EAIG,GAJH,sBAAA,EAMG,cAAc,CAAC,MANlB,CADF,CAXF,CADF;AAwBD;;AAtCD,OAAA,CAAA,OAAA,GAAA,OAAA;;AAwCA,SAAgB,eAAhB,CAAgC,EAAhC,EAAqD;MAAnB,OAAO,GAAA,EAAA,CAAA;MAAE,QAAQ,GAAA,EAAA,CAAA;;AAC3C,MAAA,EAAA,GAGF,aAAa,CAAC,OAAD,CAHX;AAAA,MACJ,cAAc,GAAA,EAAA,CAAA,cADV;AAAA,MAEJ,cAAc,GAAA,EAAA,CAAA,cAFV;;AAKN,MAAI,cAAc,GAAG,cAArB;;AAEA,MAAI,QAAJ,EAAc;AACZ,IAAA,cAAc,GAAG,cAAc,CAC5B,IADc,CACT,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,aAAA,CAAC,CAAC,UAAF,GAAe,CAAC,CAAC,UAAjB;AAA2B,KAD5B,EAEd,MAFc,CAEP,UAAC,KAAD,EAAQ,KAAR,EAAa;AAAK,aAAA,KAAK,GAAG,QAAR;AAAgB,KAF3B,CAAjB;AAGD;;AAED,SACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,OAAA,CAAA,OAAA,CAAA,QAAA,EAAA,IAAA,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,GAAD,EAAI;AAAC,IAAA,SAAS,EAAE;AAAZ,GAAJ,CADF,EAEG,cAAc,CAAC,MAAf,GAAwB,CAAxB,IACD,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,WAAA,CAAA,OAAD,EAAM;AAAC,IAAA,IAAI,EAAE,cAAc,CAAC,GAAf,CAAmB,UAAC,EAAD,EAAqB;UAAlB,IAAI,GAAA,EAAA,CAAA;UAAE,UAAU,GAAA,EAAA,CAAA;AAAO,aAAC;AAAE,QAAA,IAAI,EAAA,IAAN;AAAQ,QAAA,KAAK,EAAE;AAAf,OAAD;AAA6B,KAA1E;AAAP,GAAN,CAHF,EAKE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,GAAD,EAAI;AAAC,IAAA,SAAS,EAAE;AAAZ,GAAJ,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,IAAD,EAAK;AAAC,IAAA,IAAI,EAAA,IAAL;AAAM,IAAA,eAAe,EAAC,SAAtB;AAAgC,IAAA,KAAK,EAAC;AAAtC,GAAL,EACG,GADH,gBAAA,EAGG,cAHH,EAIG,GAJH,sBAAA,EAMG,cAAc,CAAC,MANlB,CADF,CALF,CADF;AAkBD;;AAhCD,OAAA,CAAA,eAAA,GAAA,eAAA;;AAkCA,IAAM,aAAa,GAAG,UAAC,OAAD,EAAU,aAAV,EAAuB;AAC3C,MAAM,QAAQ,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,MAAA,CACT,aAAa,CAAC,SAAd,CAAwB,GAAxB,CAA4B,UAAC,EAAD,EAAc;QAAX,EAAE,GAAA,EAAA,CAAA;QAAE,KAAK,GAAA,EAAA,CAAA;AAAO,WAAC;AAAE,MAAA,EAAE,EAAA,EAAJ;AAAM,MAAA,KAAK,EAAA;AAAX,KAAD;AAAe,GAA9D,CADS,CAAA,EACsD,KADtD,CAAA,EACsD,MAAA,CAC/D,aAAa,CAAC,WAAd,CAA0B,GAA1B,CAA8B,UAAC,EAAD,EAAc;QAAX,EAAE,GAAA,EAAA,CAAA;QAAE,KAAK,GAAA,EAAA,CAAA;AAAO,WAAC;AAAE,MAAA,EAAE,EAAA,EAAJ;AAAM,MAAA,KAAK,EAAA;AAAX,KAAD;AAAe,GAAhE,CAD+D,CADtD,EAEwD,KAFxD,CAAd;;AAKA,MAAM,aAAa,GAAG,GAAG,MAAH,CAAU,KAAV,CAAgB,EAAhB,EAAoB,OAAO,CAAC,GAAR,CAAY,UAAC,IAAD,EAAK;AAAK,WAAA,IAAI,CAAC,KAAL,CAAW,GAAX,CAAe,UAAC,EAAD,EAAO;UAAJ,EAAE,GAAA,EAAA,CAAA;AAAO,aAAA,EAAA;AAAE,KAA7B,CAAA;AAA8B,GAApD,CAApB,CAAtB;AACA,MAAM,aAAa,GAAG,KAAK,CAAC,IAAN,CAAW,IAAI,GAAJ,CAAO,aAAA,CAAA,EAAA,EAAA,MAAA,CAAK,aAAL,CAAA,EAAkB,KAAlB,CAAP,CAAX,CAAtB;AAEA,MAAM,aAAa,GAAG,QAAQ,CAAC,MAAT,CAAgB,UAAC,EAAD,EAAO;QAAJ,EAAE,GAAA,EAAA,CAAA;AAAO,WAAA,CAAC,aAAa,CAAC,QAAd,CAAuB,EAAvB,CAAD;AAA2B,GAAvD,CAAtB;AAEA,SAAO;AACL,IAAA,aAAa,EAAE,aADV;AAEL,IAAA,UAAU,EAAE,QAAQ,CAAC,MAFhB;AAGL,IAAA,kBAAkB,EAAE,aAAa,CAAC;AAH7B,GAAP;AAKD,CAhBD;;AAkBA,SAAgB,kBAAhB,CAAmC,EAAnC,EAA6D;MAAxB,OAAO,GAAA,EAAA,CAAA;MAAE,aAAa,GAAA,EAAA,CAAA;;AACnD,MAAA,EAAA,GAAgC,aAAa,CAAC,OAAD,EAAU,aAAV,CAA7C;AAAA,MAAE,aAAa,GAAA,EAAA,CAAA,aAAf;AAAA,MAAiB,UAAU,GAAA,EAAA,CAAA,UAA3B;;AAEN,SACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,OAAA,CAAA,OAAA,CAAA,QAAA,EAAA,IAAA,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,GAAD,EAAI;AAAC,IAAA,SAAS,EAAE;AAAZ,GAAJ,CADF,EAEG,aAAa,CAAC,MAAd,GAAuB,CAAvB,IACD,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,WAAA,CAAA,OAAD,EAAM;AAAC,IAAA,IAAI,EAAE;AAAP,GAAN,CAHF,EAKE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,GAAD,EAAI;AAAC,IAAA,SAAS,EAAE;AAAZ,GAAJ,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,IAAD,EAAK;AAAC,IAAA,IAAI,EAAA,IAAL;AAAM,IAAA,eAAe,EAAC,SAAtB;AAAgC,IAAA,KAAK,EAAC;AAAtC,GAAL,+BAAA,EAEG,GAFH,EAGG,aAAa,CAAC,MAHjB,EAIG,GAJH,KAAA,EAMG,UANH,CADF,CALF,CADF;AAkBD;;AArBD,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAuBA,SAAgB,cAAhB,CAA+B,EAA/B,EAAsD;MAArB,OAAO,GAAA,EAAA,CAAA;MAAE,UAAU,GAAA,EAAA,CAAA;AAClD,MAAM,YAAY,GAAG,MAAM,CAAC,IAAP,CAAY,OAAZ,EAAqB,GAArB,CAAyB,UAAC,QAAD,EAAS;AACrD,QAAM,MAAM,GAAG,OAAO,CAAC,QAAD,CAAtB;AACA,WAAO;AACL,MAAA,IAAI,EAAE,oBAAoB,CAAC,QAAD,EAAW,EAAX,CADrB;AAEL,MAAA,GAAG,EAAE,MAAM,CAAC,GAFP;AAGL,MAAA,OAAO,EAAE,MAAM,CAAC,OAHX;AAIL,MAAA,KAAK,EAAE,MAAM,CAAC;AAJT,KAAP;AAMD,GARoB,EAQlB,MARkB,CAQX,UAAC,IAAD,EAAK;AAAK,WAAA,IAAI,CAAC,GAAL,KAAa,CAAb,IAAkB,IAAI,CAAC,OAAL,KAAiB,CAAnC;AAAoC,GARnC,CAArB;AAUA,MAAM,WAAW,GAAG,YAAY,CAAC,MAAb,CAAoB,UAAC,GAAD,EAAM,GAAN,EAAS;AAC/C,QAAM,QAAQ,GAAG,GAAG,CAAC,GAAJ,GAAU,GAAG,CAAC,GAA/B;AACA,QAAM,YAAY,GAAG,GAAG,CAAC,OAAJ,GAAc,GAAG,CAAC,GAAvC;AAEA,WAAO;AACL,MAAA,GAAG,EAAE,QADA;AAEL,MAAA,GAAG,EAAE,YAFA;AAGL,MAAA,KAAK,EAAE,YAAY,GAAG;AAHjB,KAAP;AAKD,GATmB,EASjB;AACD,IAAA,GAAG,EAAE,CADJ;AAED,IAAA,GAAG,EAAE,CAFJ;AAGD,IAAA,KAAK,EAAE;AAHN,GATiB,CAApB;AAeA,MAAM,cAAc,GAAG,YAAY,CAChC,MADoB,CACb,UAAC,IAAD,EAAK;AAAK,WAAA,IAAI,CAAC,KAAL,KAAe,CAAf;AAAgB,GADb,EAEpB,GAFoB,CAEhB,UAAC,IAAD,EAAK;AAAK,WAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACV,IADU,CAAA,EACN;AACP,MAAA,KAAK,EAAE;AADA,KADM,CAAA;AAGb,GALmB,CAAvB;AAOA,MAAM,aAAa,GAAG,YAAY,CAC/B,MADmB,CACZ,UAAC,IAAD,EAAK;AAAK,WAAA,IAAI,CAAC,KAAL,GAAa,CAAb;AAAc,GADZ,EAEnB,GAFmB,CAEf,UAAC,IAAD,EAAK;AAAK,WAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACV,IADU,CAAA,EACN;AACP,MAAA,KAAK,EAAE,UAAA,MAAA,CAAK,IAAI,CAAC,KAAV;AADA,KADM,CAAA;AAGb,GALkB,CAAtB;AAOA,MAAM,aAAa,GAAG,YAAY,CAC/B,MADmB,CACZ,UAAC,IAAD,EAAK;AAAK,WAAA,IAAI,CAAC,KAAL,GAAa,CAAb;AAAc,GADZ,EAEnB,GAFmB,CAEf,UAAC,IAAD,EAAK;AAAK,WAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACV,IADU,CAAA,EACN;AACP,MAAA,KAAK,EAAE,UAAA,MAAA,CAAK,IAAI,CAAC,KAAV;AADA,KADM,CAAA;AAGb,GALkB,CAAtB;;AAOA,MAAM,WAAW,GAAG,UAAC,EAAD,EAAG;AACrB,QAAI,EAAE,GAAG,CAAT,EAAY,OAAO,KAAP;AACZ,QAAI,EAAE,GAAG,CAAT,EAAY,OAAO,OAAP;AACZ,WAAO,MAAP;AACD,GAJD;;AAMA,GAAA,GAAA,OAAA,CAAA,SAAA,EAAU,YAAA;AACR,QAAI,UAAJ,EAAgB;AACd,MAAA,UAAU,CAAC,YAAA;AACT,YAAM,IAAI,GAAG,CAAA,GAAA,mBAAA,CAAA,OAAA,EAAkB;AAC7B,UAAA,cAAc,EAAA,cADe;AAE7B,UAAA,aAAa,EAAA,aAFgB;AAG7B,UAAA,aAAa,EAAA,aAHgB;AAI7B,UAAA,WAAW,EAAA,WAJkB;AAK7B,UAAA,WAAW,EAAA;AALkB,SAAlB,CAAb;AAQA,QAAA,IAAA,CAAA,OAAA,CAAG,KAAH,CAAS,SAAT,EAAoB;AAAE,UAAA,SAAS,EAAE;AAAb,SAApB,EAAyC,UAAC,GAAD,EAAI;AAC3C,cAAI,GAAJ,EAAS,MAAM,GAAN;AACT,UAAA,IAAA,CAAA,OAAA,CAAG,aAAH,CAAiB,UAAjB,EAA6B,IAA7B;AACD,SAHD;AAID,OAbS,EAaP,IAbO,CAAV;AAcD;AACF,GAjBD,EAiBG,EAjBH;AAmBA,SACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,OAAA,CAAA,OAAA,CAAA,QAAA,EAAA,IAAA,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,GAAD,EAAI;AAAC,IAAA,SAAS,EAAE;AAAZ,GAAJ,CADF,EAEG,cAAc,CAAC,MAAf,GAAwB,CAAxB,IACD,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,GAAD,EAAI;AAAC,IAAA,SAAS,EAAE,CAAZ;AAAe,IAAA,aAAa,EAAC;AAA7B,GAAJ,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,IAAD,EAAK;AAAC,IAAA,SAAS,EAAA,IAAV;AAAW,IAAA,IAAI,EAAA,IAAf;AAAgB,IAAA,KAAK,EAAC;AAAtB,GAAL,EAAiC,qCAAjC,CADF,EAEE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,WAAA,CAAA,OAAD,EAAM;AAAC,IAAA,IAAI,EAAE;AAAP,GAAN,CAFF,CAHF,EAQG,aAAa,CAAC,MAAd,GAAuB,CAAvB,IACD,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,GAAD,EAAI;AAAC,IAAA,SAAS,EAAE,CAAZ;AAAe,IAAA,aAAa,EAAC;AAA7B,GAAJ,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,IAAD,EAAK;AAAC,IAAA,SAAS,EAAA,IAAV;AAAW,IAAA,IAAI,EAAA,IAAf;AAAgB,IAAA,KAAK,EAAC;AAAtB,GAAL,EAAkC,sBAAlC,CADF,EAEE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,WAAA,CAAA,OAAD,EAAM;AAAC,IAAA,IAAI,EAAE;AAAP,GAAN,CAFF,CATF,EAcG,aAAa,CAAC,MAAd,GAAuB,CAAvB,IACD,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,GAAD,EAAI;AAAC,IAAA,SAAS,EAAE,CAAZ;AAAe,IAAA,aAAa,EAAC;AAA7B,GAAJ,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,IAAD,EAAK;AAAC,IAAA,SAAS,EAAA,IAAV;AAAW,IAAA,IAAI,EAAA,IAAf;AAAgB,IAAA,KAAK,EAAC;AAAtB,GAAL,EAAgC,sBAAhC,CADF,EAEE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,WAAA,CAAA,OAAD,EAAM;AAAC,IAAA,IAAI,EAAE;AAAP,GAAN,CAFF,CAfF,EAoBE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,GAAD,EAAI;AAAC,IAAA,SAAS,EAAE;AAAZ,GAAJ,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,GAAD,EAAI;AAAC,IAAA,WAAW,EAAE,CAAd;AAAiB,IAAA,YAAY,EAAE,CAA/B;AAAkC,IAAA,WAAW,EAAC,OAA9C;AAAsD,IAAA,aAAa,EAAC;AAApE,GAAJ,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,IAAD,EAAK,IAAL,cAAA,EAEG,GAFH,EAGE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,IAAD,EAAK,IAAL,EAAO,WAAW,CAAC,GAAZ,CAAgB,QAAhB,EAAP,CAHF,CADF,CADF,EAQE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,GAAD,EAAI;AAAC,IAAA,WAAW,EAAE,CAAd;AAAiB,IAAA,YAAY,EAAE,CAA/B;AAAkC,IAAA,WAAW,EAAC,OAA9C;AAAsD,IAAA,aAAa,EAAC;AAApE,GAAJ,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,IAAD,EAAK,IAAL,aAAA,EAEG,GAFH,EAGE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,IAAD,EAAK,IAAL,EAAO,WAAW,CAAC,GAAZ,CAAgB,QAAhB,EAAP,CAHF,CADF,CARF,EAgBE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,GAAD,EAAI;AAAC,IAAA,WAAW,EAAE,CAAd;AAAiB,IAAA,YAAY,EAAE,CAA/B;AAAkC,IAAA,WAAW,EAAC,OAA9C;AAAsD,IAAA,aAAa,EAAC;AAApE,GAAJ,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,IAAD,EAAK;AAAC,IAAA,IAAI,EAAA,IAAL;AAAM,IAAA,KAAK,EAAE,WAAW,CAAC,WAAW,CAAC,KAAb,CAAxB;AAA6C,IAAA,MAAM,EAAA;AAAnD,GAAL,UAAA,EAEG,GAFH,EAGG,WAAW,CAAC,KAAZ,CAAkB,QAAlB,EAHH,CADF,CAhBF,CApBF,CADF;AA+CD;;AAvHD,OAAA,CAAA,cAAA,GAAA,cAAA;;;;;;;;;;;;;;;ACxJA,IAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AAEO,IAAM,aAAa,GAAG,UAAC,MAAD,EAAO;AAAK,SAAC,MAAM,GAC5C,MAAA,CAAA,OAAA,CAAK,QAAL,CAAc,OAAO,CAAC,GAAR,EAAd,EAA6B,MAA7B,CAD4C,GAE5C,MAAA,CAAA,OAAA,CAAK,QAAL,CAAc,OAAO,CAAC,GAAR,EAAd,EAA6B,4BAA7B,CAFqC;AAEsB,CAFxD;;AAAM,OAAA,CAAA,aAAA,GAAa,aAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,IAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AAEA,IAAM,qBAAqB,GAAG;AAC5B,EAAA,SAAS,EAAE,MADiB;AAE5B,EAAA,SAAS,EAAE,YAAA;AAAM,WAAA,CAAA;AAAC;AAFU,CAA9B;AAKA,IAAM,uBAAuB,GAAG;AAC9B,EAAA,SAAS,EAAE;AADmB,CAAhC;;AAIA,IAAM,cAAc,GAAG,UAAO,UAAP,EAAyB;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;;AAInC,iBAAA,CAAA;AAAA;AAAA,YAAA,OAAA,CAAA,OAAA,GAAA,IAAA,CAAA,YAAA;AAAA,mBAAA,YAAA,CAAA,OAAA,CAAa,GAAA,MAAA,CAAG,OAAO,CAAC,GAAR,EAAH,EAAgB,GAAhB,EAAgB,MAAhB,CAAoB,UAApB,CAAb,CAAA,CAAA;AAA6C,WAA7C,CAAA,CAAA;;;AAAT,UAAA,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;;;;;;;AAEA,iBAAA,CAAA;AAAA;AAAA,YAAO;AACL,YAAA,aAAa,EAAE,KADV;AAEL,YAAA,cAAc,EAAE,EAFX;AAGL,YAAA,YAAY,EAAE,IAHT;AAIL,YAAA,YAAY,EAAE,CACZ,6CAAA,MAAA,CAA6C,UAA7C,EAAuD,wFAAvD,CADY;AAJT,WAAP,CAAA;;;AAUI,UAAA,YAAY,GAAG;AACnB,YAAA,aAAa,EAAE,IADI;AAEnB,YAAA,cAAc,EAAE,MAAM,CAAC,OAFJ;AAGnB,YAAA,aAAa,EAAE,MAAM,CAAC,OAHH;AAInB,YAAA,YAAY,EAAE,IAJK;AAKnB,YAAA,YAAY,EAAE;AALK,WAAf;AAQA,UAAA,iBAAiB,GAAG,CAAC,CAAC,MAAM,CAAC,WAA7B;AACA,UAAA,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,SAAxB;AACA,UAAA,cAAc,GAAG,CAAC,CAAC,MAAM,CAAC,WAA1B;AACA,UAAA,mBAAmB,GAAG,CAAC,CAAC,MAAM,CAAC,gBAA/B;AACA,UAAA,YAAY,GAAG,YAAY,IAAI,cAA/B;AACA,UAAA,6BAA6B,GAAG,cAAc,IAAI,mBAAlD;;AAEN,cAAI,CAAC,iBAAD,IAAsB,CAAC,YAAvB,IAAuC,CAAC,6BAA5C,EAA2E;AACzE,YAAA,YAAY,CAAC,aAAb,GAA6B,KAA7B;;AAEA,gBAAI,CAAC,iBAAL,EAAwB;AACtB,cAAA,YAAY,CAAC,YAAb,CAA0B,IAA1B,CACE,oFADF;AAGD;;AAED,gBAAI,CAAC,YAAL,EAAmB;AACjB,cAAA,YAAY,CAAC,YAAb,CAA0B,IAA1B,CACE,qFADF;AAGD;;AAED,gBAAI,CAAC,6BAAL,EAAoC;AAClC,cAAA,YAAY,CAAC,YAAb,CAA0B,IAA1B,CACE,iEADF;AAGD;AACF;;AAEK,UAAA,SAAS,GAAG,MAAM,CAAC,SAAP,CAAiB,GAAjB,CAAqB,UAAC,IAAD,EAAK;AAAK,mBAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAC5C,qBAD4C,CAAA,EAE5C,IAF4C,CAAA;AAG/C,WAHgB,CAAZ;AAKA,UAAA,WAAW,GAAG,MAAM,CAAC,WAAP,CAAmB,GAAnB,CAAuB,UAAC,IAAD,EAAK;AAAK,mBAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EAChD,uBADgD,CAAA,EAEhD,IAFgD,CAAA;AAGnD,WAHkB,CAAd,EAKN;;AAEA,cAAI,mBAAJ,EAAyB;AACvB,gBAAI;AACF,cAAA,YAAY,CAAC,cAAb,CAA4B,YAA5B,GAA2C,OAAO,CAChD,MAAA,CAAA,OAAA,CAAK,OAAL,CAAa,OAAO,CAAC,GAAR,EAAb,EAA4B,MAAM,CAAC,OAAP,CAAe,gBAA3C,CADgD,CAAlD;AAGD,aAJD,CAIE,OAAO,CAAP,EAAU;AACV,qBAAA,CAAA;AAAA;AAAA,gBAAO;AACL,gBAAA,aAAa,EAAE,KADV;AAEL,gBAAA,cAAc,EAAE,EAFX;AAGL,gBAAA,YAAY,EAAE,IAHT;AAIL,gBAAA,YAAY,EAAE,CACZ,2CADY;AAJT,eAAP,CAAA;AAQD;AACF;;AAED,iBAAA,CAAA;AAAA;AAAA,YAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACK,YADL,CAAA,EACiB;AACf,YAAA,cAAc,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACT,YAAY,CAAC,cADJ,CAAA,EACkB;AAC9B,cAAA,WAAW,EAAA,WADmB;AAE9B,cAAA,SAAS,EAAA;AAFqB,aADlB;AADC,WADjB,CAAA,CAAA;;;GAlF8C,CAAA;AA0F/C,CA1FD;;AA4FA,OAAA,CAAA,OAAA,GAAe,cAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvGA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;AAEA,IAAM,kBAAkB,GAAG,UAAC,MAAD,EAAO;AAC1B,MAAA,EAAA,GAAA,MAAA,CAA4C,CAAA,GAAA,OAAA,CAAA,QAAA,EAAS,IAAT,CAA5C,EAA0D,CAA1D,CAAA;AAAA,MAAC,iBAAiB,GAAA,EAAA,CAAA,CAAA,CAAlB;AAAA,MAAoB,oBAAoB,GAAA,EAAA,CAAA,CAAA,CAAxC;;AACA,MAAA,EAAA,GAAA,MAAA,CAAoC,CAAA,GAAA,OAAA,CAAA,QAAA,EAAS,IAAT,CAApC,EAAkD,CAAlD,CAAA;AAAA,MAAC,aAAa,GAAA,EAAA,CAAA,CAAA,CAAd;AAAA,MAAgB,gBAAgB,GAAA,EAAA,CAAA,CAAA,CAAhC;;AACA,MAAA,EAAA,GAAA,MAAA,CAAkC,CAAA,GAAA,OAAA,CAAA,QAAA,EAAS,IAAT,CAAlC,EAAgD,CAAhD,CAAA;AAAA,MAAC,YAAY,GAAA,EAAA,CAAA,CAAA,CAAb;AAAA,MAAe,eAAe,GAAA,EAAA,CAAA,CAAA,CAA9B;;AACA,MAAA,EAAA,GAAA,MAAA,CAAoC,CAAA,GAAA,OAAA,CAAA,QAAA,EAAS,IAAT,CAApC,EAAkD,CAAlD,CAAA;AAAA,MAAC,aAAa,GAAA,EAAA,CAAA,CAAA,CAAd;AAAA,MAAgB,gBAAgB,GAAA,EAAA,CAAA,CAAA,CAAhC;;AAEN,GAAA,GAAA,OAAA,CAAA,SAAA,EAAU,YAAA;AACR,KAAC,YAAA;AAAA,aAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;;AACO,cAAA,UAAU,GAAG,CAAA,GAAA,OAAA,CAAA,aAAA,EAAc,MAAd,CAAb;AAGF,qBAAA,CAAA;AAAA;AAAA,gBAAM,CAAA,GAAA,gBAAA,CAAA,OAAA,EAAe,UAAf,CAAN,CAAA;;;AAFE,cAAA,EAAA,GAEF,EAAA,CAAA,IAAA,EAFE,EACJ,aAAa,GAAA,EAAA,CAAA,aADT,EACW,cAAc,GAAA,EAAA,CAAA,cADzB,EAC2B,YAAY,GAAA,EAAA,CAAA,YADvC,EACyC,aAAa,GAAA,EAAA,CAAA,aADtD;AAGN,cAAA,gBAAgB,CAAC,aAAD,CAAhB;AACA,cAAA,gBAAgB,CAAC,cAAD,CAAhB;AACA,cAAA,oBAAoB,CAAC,aAAD,CAApB;AACA,cAAA,eAAe,CAAC,YAAD,CAAf;;;;;;OARD,CAAA;AASA,KATD;AAUD,GAXD,EAWG,EAXH;AAaA,SAAO;AACL,IAAA,iBAAiB,EAAA,iBADZ;AAEL,IAAA,aAAa,EAAA,aAFR;AAGL,IAAA,YAAY,EAAA,YAHP;AAIL,IAAA,aAAa,EAAA;AAJR,GAAP;AAMD,CAzBD;;AA2BA,OAAA,CAAA,OAAA,GAAe,kBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA,IAAA,OAAA,GAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,YAAA,GAAA,eAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,KAAA,CAAA;;AACA,IAAA,eAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,YAAA,GAAA,eAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,wBAAA,CAAA,CAAA;;AACA,IAAA,eAAA,GAAA,eAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AACA,IAAA,oBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,8BAAA,CAAA,CAAA;;AAEA,IAAI,UAAJ;AACA,IAAI,UAAU,GAAG,KAAjB;AAEA,IAAM,UAAU,GAAG;AACjB,EAAA,OAAO,EAAE,OAAO,CAAC,GAAR,EADQ;AAEjB,EAAA,MAAM,EAAE,KAFS;AAGjB,EAAA,sBAAsB,EAAE;AAHP,CAAnB;AAMA,IAAM,GAAG,GAAG,CAAA,GAAA,YAAA,CAAA,OAAA,EAAU,UAAV,CAAZ;;AAEA,IAAM,UAAU,GAAG,UAAO,QAAP,EAAe;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;AACnB,iBAAA,CAAA;AAAA;AAAA,YAAM,GAAG,CAAC,QAAJ,CAAa,CAAC,SAAD,EAAY,MAAZ,CAAb,CAAN,CAAA;;;AAAb,UAAA,UAAU,GAAG,EAAA,CAAA,IAAA,EAAb;AACe,iBAAA,CAAA;AAAA;AAAA,YAAM,GAAG,CAAC,MAAJ,EAAN,CAAA;;;AAAT,UAAA,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;AAEA,UAAA,OAAO,GAAG,MAAM,CAAC,KAAP,CAAa,MAAvB;gBAEF,OAAO,GAAG,IAAV,OAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;AACF,UAAA,UAAU,GAAG,IAAb;AACA,iBAAA,CAAA;AAAA;AAAA,YAAM,GAAG,CAAC,KAAJ,EAAN,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;;;;AAGF,iBAAA,CAAA;AAAA;AAAA,YAAM,GAAG,CAAC,QAAJ,CAAa,CAAC,QAAD,CAAb,CAAN,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;;;;;;GAXgC,CAAA;AAYjC,CAZD;;AAcA,IAAM,qBAAqB,GAAG,YAAA;AAAA,SAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;AAC5B,iBAAA,CAAA;AAAA;AAAA,YAAM,GAAG,CAAC,QAAJ,CAAa,CAAC,UAAD,CAAb,CAAN,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;eAEI,YAAA,OAAA,CAAA;AAAA;AAAA,YAAA,CAAA,CAAA;AACF,iBAAA,CAAA;AAAA;AAAA,YAAM,GAAG,CAAC,KAAJ,CAAU,CAAC,KAAD,CAAV,CAAN,CAAA;;;AAAA,UAAA,EAAA,CAAA,IAAA;;AACA,UAAA,UAAU,GAAG,KAAb;;;;;;;;;GAL0B,CAAA;AAO7B,CAPD;;AASA,SAAS,OAAT,CAAiB,EAAjB,EAOC;AAPD,MAAA,KAAA,GAAA,IAAA;;MACE,EAAA,GAAA,EAAA,CAAA;MAAA,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO;MACf,EAAA,GAAA,EAAA,CAAA;MAAA,IAAI,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO;MACX,EAAA,GAAA,EAAA,CAAA;MAAA,IAAI,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO;MACX,EAAA,GAAA,EAAA,CAAA;MAAA,MAAM,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO;MACb,EAAA,GAAA,EAAA,CAAA;MAAA,WAAW,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAH,GAAO;MAClB,EAAA,GAAA,EAAA,CAAA;MAAA,UAAU,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ;;AAEZ,MAAA,EAAA,GAAA,MAAA,CAAwB,CAAA,GAAA,OAAA,CAAA,QAAA,EAAS,IAAT,CAAxB,EAAsC,CAAtC,CAAA;AAAA,MAAC,OAAO,GAAA,EAAA,CAAA,CAAA,CAAR;AAAA,MAAU,UAAU,GAAA,EAAA,CAAA,CAAA,CAApB;;AACA,MAAA,EAAA,GAAA,MAAA,CAA0B,CAAA,GAAA,OAAA,CAAA,QAAA,EAAS,IAAT,CAA1B,EAAwC,CAAxC,CAAA;AAAA,MAAC,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAT;AAAA,MAAW,WAAW,GAAA,EAAA,CAAA,CAAA,CAAtB;;AACA,MAAA,EAAA,GAAA,MAAA,CAA0C,CAAA,GAAA,OAAA,CAAA,QAAA,EAAS,CAAT,CAA1C,EAAqD,CAArD,CAAA;AAAA,MAAC,gBAAgB,GAAA,EAAA,CAAA,CAAA,CAAjB;AAAA,MAAmB,mBAAmB,GAAA,EAAA,CAAA,CAAA,CAAtC;;AACA,MAAA,EAAA,GAAA,MAAA,CAAwC,CAAA,GAAA,OAAA,CAAA,QAAA,EAAS,IAAT,CAAxC,EAAsD,CAAtD,CAAA;AAAA,MAAC,eAAe,GAAA,EAAA,CAAA,CAAA,CAAhB;AAAA,MAAkB,kBAAkB,GAAA,EAAA,CAAA,CAAA,CAApC;;AACA,MAAA,EAAA,GAAA,MAAA,CAA0D,CAAA,GAAA,OAAA,CAAA,QAAA,EAAS,CAAT,CAA1D,EAAqE,CAArE,CAAA;AAAA,MAAC,wBAAwB,GAAA,EAAA,CAAA,CAAA,CAAzB;AAAA,MAA2B,2BAA2B,GAAA,EAAA,CAAA,CAAA,CAAtD;;AAEA,MAAA,EAAA,GAAA,MAAA,CAAgC,CAAA,GAAA,OAAA,CAAA,QAAA,EAAS,IAAT,CAAhC,EAA8C,CAA9C,CAAA;AAAA,MAAC,WAAW,GAAA,EAAA,CAAA,CAAA,CAAZ;AAAA,MAAc,cAAc,GAAA,EAAA,CAAA,CAAA,CAA5B;;AAEA,MAAA,EAAA,GAGF,CAAA,GAAA,oBAAA,CAAA,OAAA,EAAmB,MAAnB,CAHE;AAAA,MACJ,iBAAiB,GAAA,EAAA,CAAA,iBADb;AAAA,MAEJ,aAAa,GAAA,EAAA,CAAA,aAFT;;AAKN,GAAA,GAAA,OAAA,CAAA,SAAA,EAAU,YAAA;AACR,KAAC,YAAA;AAAA,aAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;mBACK,mBAAA,OAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;AACa,qBAAA,CAAA;AAAA;AAAA,gBAAM,CAAA,GAAA,cAAA,CAAA,OAAA,EAAa,aAAb,EAA4B,QAA5B,EAAsC,WAAtC,CAAN,CAAA;;;AAAT,cAAA,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;AACN,cAAA,WAAW,CAAC,MAAD,CAAX;;;;;;;;;OAHH,CAAA;AAKA,KALD;AAMD,GAPD,EAOG,CAAC,iBAAD,CAPH;AASA,GAAA,GAAA,OAAA,CAAA,SAAA,EAAU,YAAA;AACR,KAAC,YAAA;AAAA,aAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;oBACK,QAAQ,KAAK,OAAb,OAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;AACI,cAAA,SAAS,GAAG,YAAA;AAAM,uBAAA,mBAAmB,CAAC,UAAC,SAAD,EAAU;AAAK,yBAAA,SAAS,IAAI,CAAb;AAAc,iBAA9B,CAAnB;AAAkD,eAApE;;AACS,qBAAA,CAAA;AAAA;AAAA,gBAAM,CAAA,GAAA,eAAA,CAAA,OAAA,EAAc,QAAd,EAAwB,aAAxB,EAAuC,IAAvC,EAA6C,IAA7C,EAAmD,SAAnD,CAAN,CAAA;;;AAAT,cAAA,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;AACN,cAAA,UAAU,CAAC,MAAD,CAAV;;;;;;;;;OAJH,CAAA;AAMA,KAND;AAOD,GARD,EAQG,CAAC,QAAD,CARH;AAUA,GAAA,GAAA,OAAA,CAAA,SAAA,EAAU,YAAA;AACR,KAAC,YAAA;AAAA,aAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;oBACK,OAAO,KAAK,OAAZ,OAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;AAEA,qBAAA,CAAA;AAAA;AAAA,gBAAM,UAAU,CAAC,QAAD,CAAhB,CAAA;;;AAAA,cAAA,EAAA,CAAA,IAAA;;;;;;;;AAEA,cAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;;;;;;AAEI,cAAA,SAAS,GAAG,YAAA;AAAM,uBAAA,2BAA2B,CAAC,UAAC,SAAD,EAAU;AAAK,yBAAA,SAAS,IAAI,CAAb;AAAc,iBAA9B,CAA3B;AAA0D,eAA5E;;AACS,qBAAA,CAAA;AAAA;AAAA,gBAAM,CAAA,GAAA,eAAA,CAAA,OAAA,EAAc,QAAd,EAAwB,aAAxB,EAAuC,IAAvC,EAA6C,IAA7C,EAAmD,SAAnD,CAAN,CAAA;;;AAAT,cAAA,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;AACN,cAAA,kBAAkB,CAAC,MAAD,CAAlB;;;;;;;;;OATH,CAAA;AAWA,KAXD;AAYD,GAbD,EAaG,CAAC,OAAD,CAbH;AAeA,GAAA,GAAA,OAAA,CAAA,SAAA,EAAU,YAAA;AACR,KAAC,YAAA;AAAA,aAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;oBACK,eAAe,KAAK,OAApB,OAAA,CAAA;AAAA;AAAA,gBAAA,CAAA,CAAA;;;;;;AAEA,qBAAA,CAAA;AAAA;AAAA,gBAAM,qBAAqB,EAA3B,CAAA;;;AAAA,cAAA,EAAA,CAAA,IAAA;;;;;;;;AAEA,cAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;;;;;;AAGI,cAAA,YAAY,GAAG,MAAM,CAAC,MAAP,CAAa,KAAb,CAAA,MAAA,EAAM,aAAA,CAAA,CAAQ,EAAR,CAAA,EAAU,MAAA,CAAK,QAAQ,CAAC,GAAT,CAAa,UAAC,QAAD,EAAS;;;AAC9D,oBAAM,YAAY,GAAG,OAAO,CAAC,IAAR,CAAa,UAAC,EAAD,EAAS;sBAAN,IAAI,GAAA,EAAA,CAAA;AAAO,yBAAA,IAAI,KAAK,QAAT;AAAiB,iBAA5C,EAA8C,UAAnE;AACA,oBAAM,aAAa,GAAG,eAAe,CAAC,IAAhB,CAAqB,UAAC,EAAD,EAAS;sBAAN,IAAI,GAAA,EAAA,CAAA;AAAO,yBAAA,IAAI,KAAK,QAAT;AAAiB,iBAApD,EAAsD,UAA5E;AAEA,oBAAM,QAAQ,GAAG,YAAY,GAAG,aAAhC;AAEA,uBAAA,EAAA,GAAA,EAAA,EACE,EAAA,CAAC,QAAD,CAAA,GAAY;AACV,kBAAA,GAAG,EAAE,eAAe,CAAC,IAAhB,CAAqB,UAAC,EAAD,EAAS;wBAAN,IAAI,GAAA,EAAA,CAAA;AAAO,2BAAA,IAAI,KAAK,QAAT;AAAiB,mBAApD,EAAsD,UADjD;AAEV,kBAAA,OAAO,EAAE,OAAO,CAAC,IAAR,CAAa,UAAC,EAAD,EAAS;wBAAN,IAAI,GAAA,EAAA,CAAA;AAAO,2BAAA,IAAI,KAAK,QAAT;AAAiB,mBAA5C,EAA8C,UAF7C;AAGV,kBAAA,QAAQ,EAAA;AAHE,iBADd,IAAA;AAOD,eAbyC,CAAL,CAAV,EAazB,KAbyB,CAAN,CAAf;AAeN,cAAA,cAAc,CAAC,YAAD,CAAd;;;;;;;;;OAvBH,CAAA;AAyBA,KAzBD;AA0BD,GA3BD,EA2BG,CAAC,eAAD,CA3BH;AA6BA,SACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,OAAA,CAAA,OAAA,CAAA,QAAA,EAAA,IAAA,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,eAAA,CAAA,QAAD,EAAS,IAAT,EACE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,eAAA,CAAA,IAAD,EAAK;AACH,IAAA,KAAK,EAAE,iBAAiB,KAAK,IAAtB,GAA6B,SAA7B,GAAyC,iBAAiB,GAAG,SAAH,GAAe,OAD7E;AAEH,IAAA,KAAK,EAAC,0BAFH;AAGH,IAAA,MAAM,EAAE,iBAAiB,KAAK,IAAtB,GAA6B,wBAA7B,GAAwD,iBAAiB,GAAG,SAAH,GAAe;AAH7F,GAAL,CADF,EAME,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,eAAA,CAAA,IAAD,EAAK;AACH,IAAA,KAAK,EAAE,QAAQ,KAAK,IAAb,GAAoB,SAApB,GAAgC,SADpC;AAEH,IAAA,KAAK,EAAC,wBAFH;AAGH,IAAA,MAAM,EAAE,QAAQ,KAAK,IAAb,GAAoB,IAApB,GAA2B,GAAA,MAAA,CAAG,QAAQ,CAAC,MAAZ,EAAkB,QAAlB;AAHhC,GAAL,CANF,EAWE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,eAAA,CAAA,IAAD,EAAK;AACH,IAAA,KAAK,EAAE,OAAO,KAAK,IAAZ,GAAmB,SAAnB,GAA+B,SADnC;AAEH,IAAA,KAAK,EAAC,wBAFH;AAGH,IAAA,MAAM,EAAE,GAAA,MAAA,CAAG,gBAAH,EAAmB,GAAnB,EAAmB,MAAnB,CAAuB,QAAQ,KAAK,IAAb,GAAoB,GAApB,GAA0B,QAAQ,CAAC,MAA1D,EAAgE,QAAhE;AAHL,GAAL,CAXF,EAgBE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,eAAA,CAAA,IAAD,EAAK;AACH,IAAA,KAAK,EAAE,WAAW,KAAK,IAAhB,GAAuB,SAAvB,GAAmC,SADvC;AAEH,IAAA,KAAK,EAAE,+BAAA,MAAA,CAA+B,QAA/B,EAAuC,QAAvC,CAFJ;AAGH,IAAA,MAAM,EAAE,GAAA,MAAA,CAAG,wBAAH,EAA2B,GAA3B,EAA2B,MAA3B,CAA+B,QAAQ,KAAK,IAAb,GAAoB,GAApB,GAA0B,QAAQ,CAAC,MAAlE,EAAwE,QAAxE;AAHL,GAAL,CAhBF,CADF,EAwBG,iBAAiB,KAAK,KAAtB,IACD,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,KAAA,CAAA,IAAD,EAAK;AAAC,IAAA,KAAK,EAAC;AAAP,GAAL,EAAiB,qBAAjB,CAzBF,EA4BI,WAAW,KAAK,IAAhB,IAAwB,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,UAAA,CAAA,cAAD,EAAe;AAAC,IAAA,OAAO,EAAE,WAAV;AAAuB,IAAA,UAAU,EAAE;AAAnC,GAAf,CA5B5B,CADF;AAgCD;;AAED,OAAO,CAAC,SAAR,GAAoB;AAClB,EAAA,QAAQ,EAAE,YAAA,CAAA,OAAA,CAAU,MAAV,CAAiB,UADT;AAElB,EAAA,WAAW,EAAE,YAAA,CAAA,OAAA,CAAU,MAFL;AAGlB,EAAA,IAAI,EAAE,YAAA,CAAA,OAAA,CAAU,MAHE;AAIlB,EAAA,IAAI,EAAE,YAAA,CAAA,OAAA,CAAU,KAJE;AAKlB,EAAA,MAAM,EAAE,YAAA,CAAA,OAAA,CAAU,MALA;AAMlB,EAAA,UAAU,EAAE,YAAA,CAAA,OAAA,CAAU;AANJ,CAApB;AASA,OAAO,CAAC,UAAR,GAAqB;AACnB,EAAA,IAAI,EAAE,GADa;AAEnB,EAAA,IAAI,EAAE,GAFa;AAGnB,EAAA,WAAW,EAAE,GAHM;AAInB,EAAA,MAAM,EAAE;AAJW,CAArB;AAOA,OAAA,CAAA,OAAA,GAAe,OAAf","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import glob from 'glob'\nimport simpleGit from 'simple-git\nimport path from 'path\nimport minimatch from 'minimatch'\n\n\nconst gitOptions = {\n   baseDir: process.cwd(),\n   binary: 'git',\n   maxConcurrentProcesses: 6,\n};\n\nconst getFileList = async (config, compare, globOption) => {\n  const globFilter = globOption ? globOption : config.collectFrom\n  \n  if (compare) {\n    return new Promise(async (resolve, reject) => {\n      const git = simpleGit(gitOptions)\n      const rootGitDir = await git.revparse(['--show-toplevel'])\n      const results = await git.diff([compare, '--name-status'])\n      const currentGitDir = path.relative(rootGitDir, process.cwd())\n      const filesAndStatuses = results\n        .replace(/\\t/g, '|')\n        .split('\\n')\n        .filter(item => item !== '')\n        .map(item => {\n          const [status, filePath] = item.split('|')\n\n          return {\n            status,\n            filePath: path.relative(currentGitDir, filePath)\n          }\n        })\n      \n      const files = filesAndStatuses.filter((file) => minimatch(\n        file.filePath,\n        globFilter.replace('./', '')\n      )).map((item) => item.filePath)\n\n      resolve(files)\n    })\n  }\n\n  return new Promise((resolve, reject) => {\n    glob(globFilter, {}, (err, files) => {\n      if (err) reject(err)\n      const filteredFiles = files.map((file) => file.replace('./', '')).filter(file => file.includes('.'))\n      resolve(filteredFiles)\n    })\n  })\n}\n\nexport default getFileList","import minimatch from 'minimatch';\n\nconst doesMatchPath = ({ matchGlob = '**/*' }, file) => {\n  if (typeof matchGlob === 'string') {\n    return minimatch(\n      file.replace('./', ''),\n      matchGlob.replace('./', ''),\n    );\n  }\n\n  if (Array.isArray(matchGlob)) {\n    return matchGlob.filter((glob) => minimatch(\n      file.replace('./', ''),\n      glob.replace('./', ''),\n    )).length > 0;\n  }\n};\n\nexport const getRulesForFile = (options, filePath) => {\n  const fileRules = options.fileRules.filter((rule) => doesMatchPath(rule, filePath));\n  const eslintRules = options.eslintRules.filter((rule) => doesMatchPath(rule, filePath));\n\n  return {\n    fileRules,\n    eslintRules,\n  };\n};\n\nconst getRules = (rules, ruleId, tags) => rules\n  .filter((rule) => (ruleId\n    ? ruleId === rule.id\n    : true)).filter((rule) => ((tags && tags.length > 0)\n    ? tags.some((tag) => rule.tags.includes(tag))\n    : true));\n\nexport const filtersRulesFromOptions = (options, ruleId = null, tags = null) => {\n  let { fileRules } = options;\n  let { eslintRules } = options;\n  const cleanTag = tags && tags.filter((tag) => !!tag);\n\n  if (ruleId || cleanTag?.length) {\n    fileRules = getRules(options.fileRules, ruleId, cleanTag);\n    eslintRules = getRules(options.eslintRules, ruleId, cleanTag);\n  }\n\n  return {\n    fileRules,\n    eslintRules,\n  };\n};\n","import escapeStringRegexp from 'escape-string-regexp-node'\n\nconst getFileRulesErrors = (config, file, data) => {\n  const directoryDepth = file.replace('./').split('/')\n  directoryDepth.splice(-1)\n\n  const isImportingFrom = (str) => {\n    const regexp = new RegExp(escapeStringRegexp(`from '${str}`), 'g')\n    const res = data.matchAll(regexp)\n    const resArr = Array.from(res, m => m[0])\n\n    return resArr.length\n  }\n  \n  const find = (str) => {\n    const regexp = new RegExp(escapeStringRegexp(str), 'g')\n    const res = data.matchAll(regexp)\n    const resArr = Array.from(res, m => m[0])\n\n    return resArr.length\n  }\n  \n  const utils = {\n    directoryDepth: directoryDepth.length,\n    content: data,\n    file,\n    isImportingFrom,\n    find,\n  }\n      \n  return config.fileRules.reduce((acc, rule) => {    \n    const nbErrors = rule.matchRule({...utils})\n\n    if (nbErrors > 0) {\n      return [\n        ...acc,\n        {\n          resultId: rule.id,\n          occurences: nbErrors\n        }\n      ]\n    } else {\n      return acc\n    }\n  }, [])\n}\n\nexport default getFileRulesErrors","const getEslintRulesErrors = async (config, file, data, eslint) => {\n  let results;\n  try {\n    results = await eslint.lintText(data, { warnIgnored: true });\n  } catch (err) {\n    results = [];\n  }\n\n  const errors = results[0]?.messages;\n\n  const containRuleIdMessage = (ruleId) => errors?.filter((err) => err.ruleId === ruleId).length ?? 0;\n  const containMessageFromPlugin = (ruleId) => {\n    if (errors.length > 0) {\n      const nonNullError = errors\n        .filter((err) => err !== null && err.ruleId !== null)\n        .filter((err) => err.ruleId.startsWith(ruleId));\n\n      return nonNullError.length;\n    }\n\n    return 0;\n  };\n\n  const utils = {\n    containRuleIdMessage,\n    containMessageFromPlugin,\n    results: results[0],\n    file,\n  };\n\n  return config.eslintRules.reduce((acc, rule) => {\n    const nbErrors = rule.matchESLintRule({ ...utils });\n\n    return nbErrors > 0 ? [\n      ...acc,\n      {\n        resultId: rule.id,\n        occurences: nbErrors,\n      },\n    ] : acc;\n  }, []);\n};\n\nexport default getEslintRulesErrors;\n","import { getRulesForFile } from './filterRules';\nimport getfileRulesErrors from './getfileRulesErrors';\nimport getEslintRulesErrors from './getEslintRulesErrors';\n\nconst fs = require('fs');\n\nconst updateResults = (config, fileErrors, fileResults, ruleName) => {\n  const updatedFileResults = {\n    ...fileResults,\n  };\n  if (fileErrors.length > 0) {\n    fileErrors.forEach(({ resultId, occurences }) => {\n      const rule = config[ruleName].find(({ id }) => resultId === id);\n\n      updatedFileResults.rules.push({\n        ...rule,\n        occurences,\n      });\n\n      updatedFileResults.totalScore += rule.debtScore * occurences;\n    });\n  }\n  return updatedFileResults;\n};\n\nconst runFileChecks = async (config, file, eslint) => {\n  let fileResults = {\n    file,\n    rules: [],\n    totalScore: 0,\n  };\n\n  if (config.eslintRules.length === 0 && config.fileRules.length === 0) {\n    return fileResults;\n  }\n\n  let data;\n\n  try {\n    data = fs.readFileSync(file).toString();\n  } catch (error) {\n    data = '';\n  }\n\n  const fileRulesResults = getfileRulesErrors(config, file, data);\n  fileResults = updateResults(\n    config,\n    fileRulesResults,\n    fileResults,\n    'fileRules',\n  );\n\n  const eslintResults = await getEslintRulesErrors(config, file, data, eslint);\n\n  fileResults = updateResults(\n    config,\n    eslintResults,\n    fileResults,\n    'eslintRules',\n  );\n\n  return fileResults;\n};\n\nconst getFileResult = async (config, file, incrementCounter, eslint) => {\n  const rulesForFile = getRulesForFile(config, file);\n  const fileResult = await runFileChecks(\n    {\n      ...config,\n      ...rulesForFile,\n    },\n    file,\n    eslint,\n  );\n\n  incrementCounter();\n\n  return fileResult;\n};\n\nexport default getFileResult;\n","import { ESLint } from 'eslint';\nimport path from 'path';\nimport getFileResult from '../lib/getFileResult';\nimport { filtersRulesFromOptions } from '../lib/filterRules';\n\nexport default async (fileList, config, rule, tags, increment) => {\n  const filteredRules = filtersRulesFromOptions(config, rule, tags);\n\n  const fileListConfig = {\n    ...config,\n    ...filteredRules,\n  };\n\n  const\teslint = new ESLint({\n    useEslintrc: false,\n    baseConfig: config.eslintConfig,\n  });\n\n  const getFilesResults = fileList.map((file) => getFileResult(fileListConfig, file, increment, eslint));\n  const results = await Promise.all([...getFilesResults]);\n\n  return results;\n};\n","const createTable = (data) => `\n|File|Prev|Current|trend|\n|--|--|--|--|\n${data.map((file) => `|${file.file}|${file.rev}|${file.current}|${file.trend}|`).join('\\n')}\n`;\n\nconst compareHtmlReport = (data) => `\n## Debt collector report:\n\n${data.noChangesFiles.length > 0 ? `\n<h3 color=\"#999\">Files with same debt :</h3>\n\n${createTable(data.noChangesFiles)}\n` : null}\n\n${data.lessDeptFiles.length > 0 ? `\n<h3 color=\"green\">Files with less debt </h3>\n\n${createTable(data.lessDeptFiles)}\n` : null}\n\n${data.moreDeptFiles.length > 0 ? `\n<h3 color=\"red\">Files with more debt </h3>\n\n${createTable(data.moreDeptFiles)}\n` : null}\n</br>\n\n##### Previous debt : ${data.totalScores.rev.toString()}\n##### Current debt : ${data.totalScores.cur.toString()}\n\n<h2 color=\"${data.resultColor(data.totalScores.solde)}\">\n  Debt ${data.totalScores.solde > 0 ? 'increased' : 'decreased'} by ${data.totalScores.solde.toString()} Points\n</h2>\n\n<p>To get a file by file report, please run debt-collector check --changed-since=\"[REVISION]\"</p>\n`;\n\nexport default compareHtmlReport;\n","import React, { useEffect } from 'react';\nimport Table from 'ink-table';\nimport { Text, Box } from 'ink';\nimport fs from 'fs';\nimport compareHtmlReport from '../lib/compareHtmlReport';\n\nconst cachePath = `${process.cwd()}/node_modules/.cache/debt-collector`;\nconst resultPath = `${cachePath}/report.html`;\n\nconst splitStringIfTooLong = (str, max) => {\n  if (str.length < max) return str;\n  const charArr = str.split('');\n  const strStart = [...charArr].filter((_char, i) => i >= 0 && i < max / 2);\n  const strEnd = [...charArr].filter((_char, i) => i > (str.length - max / 2) && i < str.length);\n  return [...strStart, '....', ...strEnd].join('');\n};\n\nconst formatResults = (results) => {\n  const filteredResults = results.filter((result) => result.totalScore > 0);\n  const formatedResult = filteredResults.map(({ file, rules, totalScore }) => ({\n    file: splitStringIfTooLong(file, 80),\n    totalScore,\n    rules: rules.map(({ title, occurences, debtScore }) => ({\n      error: title,\n      nb: occurences,\n      score: debtScore * occurences,\n    })),\n  }));\n\n  const totalDeptScore = formatedResult.reduce((acc, res) => acc + res.totalScore, 0);\n\n  return {\n    formatedResult,\n    totalDeptScore,\n  };\n};\n\nexport function Results({ results, limitTop }) {\n  const {\n    formatedResult,\n    totalDeptScore,\n  } = formatResults(results);\n\n  let displayResults = formatedResult;\n\n  if (limitTop) {\n    displayResults = formatedResult\n      .sort((a, b) => b.totalScore - a.totalScore)\n      .filter((_item, index) => index < limitTop);\n  }\n\n  return (\n    <>\n      {displayResults.length > 0 && displayResults.map((result) => (\n        <Box key={result.file} flexDirection=\"column\" marginTop={1}>\n          <Text bold color=\"red\" underline>{result.file}</Text>\n          <Table data={result.rules} />\n          <Text bold color=\"red\">\n            Total Debt Score :\n            {result.totalScore}\n          </Text>\n        </Box>\n      ))}\n      <Box marginTop={1}>\n        <Text bold backgroundColor=\"#880000\" color=\"white\">\n          {' '}\n          Debt Score :\n          {totalDeptScore}\n          {' '}\n          / Impacted files :\n          {formatedResult.length}\n        </Text>\n      </Box>\n    </>\n  );\n}\n\nexport function ResultsFileOnly({ results, limitTop }) {\n  const {\n    formatedResult,\n    totalDeptScore,\n  } = formatResults(results);\n\n  let displayResults = formatedResult;\n\n  if (limitTop) {\n    displayResults = formatedResult\n      .sort((a, b) => b.totalScore - a.totalScore)\n      .filter((_item, index) => index < limitTop);\n  }\n\n  return (\n    <>\n      <Box marginTop={1} />\n      {formatedResult.length > 0 && (\n      <Table data={displayResults.map(({ file, totalScore }) => ({ file, score: totalScore }))} />\n      )}\n      <Box marginTop={1}>\n        <Text bold backgroundColor=\"#880000\" color=\"white\">\n          {' '}\n          Debt Score :\n          {totalDeptScore}\n          {' '}\n          / Impacted files :\n          {formatedResult.length}\n        </Text>\n      </Box>\n    </>\n  );\n}\n\nconst filterNoMatch = (results, initialConfig) => {\n  const allRules = [\n    ...initialConfig.fileRules.map(({ id, title }) => ({ id, title })),\n    ...initialConfig.eslintRules.map(({ id, title }) => ({ id, title })),\n  ];\n\n  const allFilesRules = [].concat.apply([], results.map((file) => file.rules.map(({ id }) => id)));\n  const existingRules = Array.from(new Set([...allFilesRules]));\n\n  const filteredRules = allRules.filter(({ id }) => !existingRules.includes(id));\n\n  return {\n    notMatchRules: filteredRules,\n    rulesCount: allRules.length,\n    existingRulesCount: existingRules.length,\n  };\n};\n\nexport function ResultsNoMatchRule({ results, initialConfig }) {\n  const { notMatchRules, rulesCount } = filterNoMatch(results, initialConfig);\n\n  return (\n    <>\n      <Box marginTop={1} />\n      {notMatchRules.length > 0 && (\n      <Table data={notMatchRules} />\n      )}\n      <Box marginTop={1}>\n        <Text bold backgroundColor=\"#880000\" color=\"white\">\n          Nb of rules with no match :\n          {' '}\n          {notMatchRules.length}\n          {' '}\n          /\n          {rulesCount}\n        </Text>\n      </Box>\n    </>\n  );\n}\n\nexport function ResultsCompare({ results, outputHtml }) {\n  const tableResults = Object.keys(results).map((fileName) => {\n    const result = results[fileName];\n    return {\n      file: splitStringIfTooLong(fileName, 60),\n      rev: result.rev,\n      current: result.current,\n      trend: result.tendency,\n    };\n  }).filter((file) => file.rev !== 0 && file.current !== 0);\n\n  const totalScores = tableResults.reduce((acc, res) => {\n    const revScore = res.rev + acc.rev;\n    const currentScore = res.current + acc.cur;\n\n    return {\n      rev: revScore,\n      cur: currentScore,\n      solde: currentScore - revScore,\n    };\n  }, {\n    rev: 0,\n    cur: 0,\n    solde: 0,\n  });\n\n  const noChangesFiles = tableResults\n    .filter((item) => item.trend === 0)\n    .map((file) => ({\n      ...file,\n      trend: '=',\n    }));\n\n  const moreDeptFiles = tableResults\n    .filter((item) => item.trend > 0)\n    .map((file) => ({\n      ...file,\n      trend: `▲ ${file.trend}`,\n    }));\n\n  const lessDeptFiles = tableResults\n    .filter((item) => item.trend < 0)\n    .map((file) => ({\n      ...file,\n      trend: `▼ ${file.trend}`,\n    }));\n\n  const resultColor = (nb) => {\n    if (nb > 0) return 'red';\n    if (nb < 0) return 'green';\n    return 'grey';\n  };\n\n  useEffect(() => {\n    if (outputHtml) {\n      setTimeout(() => {\n        const html = compareHtmlReport({\n          noChangesFiles,\n          moreDeptFiles,\n          lessDeptFiles,\n          resultColor,\n          totalScores,\n        });\n\n        fs.mkdir(cachePath, { recursive: true }, (err) => {\n          if (err) throw err;\n          fs.writeFileSync(resultPath, html);\n        });\n      }, 1000);\n    }\n  }, []);\n\n  return (\n    <>\n      <Box marginTop={1} />\n      {noChangesFiles.length > 0 && (\n      <Box marginTop={1} flexDirection=\"column\">\n        <Text underline bold color=\"grey\">Files with no changes in debt score</Text>\n        <Table data={noChangesFiles} />\n      </Box>\n      )}\n      {lessDeptFiles.length > 0 && (\n      <Box marginTop={1} flexDirection=\"column\">\n        <Text underline bold color=\"green\">Files with less debt</Text>\n        <Table data={lessDeptFiles} />\n      </Box>\n      )}\n      {moreDeptFiles.length > 0 && (\n      <Box marginTop={1} flexDirection=\"column\">\n        <Text underline bold color=\"red\">Files with more debt</Text>\n        <Table data={moreDeptFiles} />\n      </Box>\n      )}\n      <Box marginTop={1}>\n        <Box paddingLeft={1} paddingRight={1} borderStyle=\"round\" flexDirection=\"column\">\n          <Text>\n            REVISION :\n            {' '}\n            <Text>{totalScores.rev.toString()}</Text>\n          </Text>\n        </Box>\n        <Box paddingLeft={1} paddingRight={1} borderStyle=\"round\" flexDirection=\"column\">\n          <Text>\n            CURRENT :\n            {' '}\n            <Text>{totalScores.cur.toString()}</Text>\n          </Text>\n\n        </Box>\n        <Box paddingLeft={1} paddingRight={1} borderStyle=\"round\" flexDirection=\"column\">\n          <Text bold color={resultColor(totalScores.solde)} dimmed>\n            DIFF :\n            {' '}\n            {totalScores.solde.toString()}\n          </Text>\n        </Box>\n      </Box>\n    </>\n  );\n}\n","import path from 'path';\n\nexport const getConfigPath = (config) => (config\n  ? path.relative(process.cwd(), config)\n  : path.relative(process.cwd(), './debt-collector.config.js'));\n","import path from 'path';\n\nconst defaultFileRuleConfig = {\n  matchGlob: '**/*',\n  matchRule: () => 1,\n};\n\nconst defaultEslintRuleConfig = {\n  matchGlob: '**/*',\n};\n\nconst validateConfig = async (configPath: string) => {\n  let config;\n\n  try {\n    config = await import(`${process.cwd()}/${configPath}`);\n  } catch (e) {\n    return {\n      isConfigValid: false,\n      verifiedConfig: {},\n      eslintConfig: null,\n      configErrors: [\n        `Impossible to load a valid config file at ${configPath}, create a config file or provide a path to a valid config using the \"--config\" flag`,\n      ],\n    };\n  }\n\n  const returnValues = {\n    isConfigValid: true,\n    verifiedConfig: config.default,\n    defaultConfig: config.default,\n    eslintConfig: null,\n    configErrors: [],\n  };\n\n  const hasCollectFromKey = !!config.collectFrom;\n  const hasFileRules = !!config.fileRules;\n  const hasEslintRules = !!config.eslintRules;\n  const hasEslintConfigPath = !!config.eslintConfigPath;\n  const hasSomeRules = hasFileRules || hasEslintRules;\n  const hasEslintRulesAndPathToConfig = hasEslintRules && hasEslintConfigPath;\n\n  if (!hasCollectFromKey || !hasSomeRules || !hasEslintRulesAndPathToConfig) {\n    returnValues.isConfigValid = false;\n\n    if (!hasCollectFromKey) {\n      returnValues.configErrors.push(\n        'Provide a \"collectFrom\" key with a glob pattern in your configuration ex: \"./**/*\"',\n      );\n    }\n\n    if (!hasSomeRules) {\n      returnValues.configErrors.push(\n        'Your config does not have any rules, please create \"fileRules\" or/and \"eslintRules\"',\n      );\n    }\n\n    if (!hasEslintRulesAndPathToConfig) {\n      returnValues.configErrors.push(\n        'You provided \"eslintRules\" but no path to an eslint config file',\n      );\n    }\n  }\n\n  const fileRules = config.fileRules.map((rule) => ({\n    ...defaultFileRuleConfig,\n    ...rule,\n  }));\n\n  const eslintRules = config.eslintRules.map((rule) => ({\n    ...defaultEslintRuleConfig,\n    ...rule,\n  }));\n\n  // TODO : validate individual rules\n\n  if (hasEslintConfigPath) {\n    try {\n      returnValues.verifiedConfig.eslintConfig = require(\n        path.resolve(process.cwd(), config.default.eslintConfigPath),\n      );\n    } catch (e) {\n      return {\n        isConfigValid: false,\n        verifiedConfig: {},\n        eslintConfig: null,\n        configErrors: [\n          'Impossible to load the eslint config file',\n        ],\n      };\n    }\n  }\n\n  return {\n    ...returnValues,\n    verifiedConfig: {\n      ...returnValues.verifiedConfig,\n      eslintRules,\n      fileRules,\n    },\n  };\n};\n\nexport default validateConfig;\n","import { useEffect, useState } from 'react';\nimport { getConfigPath } from './utils';\nimport validateConfig from './validateConfig';\n\nconst useValidatedConfig = (config) => {\n  const [isConfigValidated, setIsConfigValidated] = useState(null);\n  const [updatedConfig, setUpdatedConfig] = useState(null);\n  const [configErrors, setConfigErrors] = useState(null);\n  const [defaultConfig, setDefaultConfig] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      const configPath = getConfigPath(config);\n      const {\n        isConfigValid, verifiedConfig, configErrors, defaultConfig,\n      } = await validateConfig(configPath);\n      setDefaultConfig(defaultConfig);\n      setUpdatedConfig(verifiedConfig);\n      setIsConfigValidated(isConfigValid);\n      setConfigErrors(configErrors);\n    })();\n  }, []);\n\n  return {\n    isConfigValidated,\n    updatedConfig,\n    configErrors,\n    defaultConfig,\n  };\n};\n\nexport default useValidatedConfig;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text } from 'ink';\nimport { TaskList, Task } from 'ink-task-list';\nimport simpleGit from 'simple-git';\nimport getFilesList from '../../lib/getFilesList';\nimport checkFileList from '../../lib/checkFileList';\nimport { ResultsCompare } from '../../components/Reporter';\nimport useValidatedConfig from '../../lib/useValidatedConfig';\n\nlet currentRev;\nlet hasStashed = false;\n\nconst gitOptions = {\n  baseDir: process.cwd(),\n  binary: 'git',\n  maxConcurrentProcesses: 6,\n};\n\nconst git = simpleGit(gitOptions);\n\nconst checkoutTo = async (revision) => {\n  currentRev = await git.revparse(['--short', 'HEAD']);\n  const status = await git.status();\n\n  const changes = status.files.length;\n\n  if (changes > 0) {\n    hasStashed = true;\n    await git.stash();\n  }\n\n  await git.checkout([revision]);\n};\n\nconst checkoutBackToCurrent = async () => {\n  await git.checkout([currentRev]);\n\n  if (hasStashed) {\n    await git.stash(['pop']);\n    hasStashed = false;\n  }\n};\n\nfunction Compare({\n  revision = null,\n  rule = null,\n  tags = null,\n  config = null,\n \tcollectFrom = null,\n  outputHtml = false,\n}) {\n  const [results, setResults] = useState(null);\n  const [fileList, setFileList] = useState(null);\n  const [checkedFileCount, setCheckedFileCount] = useState(0);\n  const [revisionResults, setRevisionResults] = useState(null);\n  const [checkedRevisionFileCount, setRevisionCheckedFileCount] = useState(0);\n\n  const [finalResult, setFinalResult] = useState(null);\n\n  const {\n    isConfigValidated,\n    updatedConfig,\n  } = useValidatedConfig(config);\n\n  useEffect(() => {\n    (async () => {\n      if (isConfigValidated) {\n        const result = await getFilesList(updatedConfig, revision, collectFrom);\n        setFileList(result);\n      }\n    })();\n  }, [isConfigValidated]);\n\n  useEffect(() => {\n    (async () => {\n      if (fileList !== null) {\n        const increment = () => setCheckedFileCount((prevCount) => prevCount += 1);\n        const result = await checkFileList(fileList, updatedConfig, rule, tags, increment);\n        setResults(result);\n      }\n    })();\n  }, [fileList]);\n\n  useEffect(() => {\n    (async () => {\n      if (results !== null) {\n        try {\n          await checkoutTo(revision);\n        } catch (e) {\n          console.log(e);\n        }\n        const increment = () => setRevisionCheckedFileCount((prevCount) => prevCount += 1);\n        const result = await checkFileList(fileList, updatedConfig, rule, tags, increment);\n        setRevisionResults(result);\n      }\n    })();\n  }, [results]);\n\n  useEffect(() => {\n    (async () => {\n      if (revisionResults !== null) {\n        try {\n          await checkoutBackToCurrent();\n        } catch (e) {\n          console.log(err);\n        }\n\n        const finalResults = Object.assign({}, ...fileList.map((fileName) => {\n          const currentScore = results.find(({ file }) => file === fileName).totalScore;\n          const revisionScore = revisionResults.find(({ file }) => file === fileName).totalScore;\n\n          const tendency = currentScore - revisionScore;\n\n          return {\n            [fileName]: {\n              rev: revisionResults.find(({ file }) => file === fileName).totalScore,\n              current: results.find(({ file }) => file === fileName).totalScore,\n              tendency,\n            },\n          };\n        }));\n\n        setFinalResult(finalResults);\n      }\n    })();\n  }, [revisionResults]);\n\n  return (\n    <>\n      <TaskList>\n        <Task\n          state={isConfigValidated === null ? 'loading' : isConfigValidated ? 'success' : 'error'}\n          label=\"validating configuration\"\n          status={isConfigValidated === null ? 'checking configuration' : isConfigValidated ? 'success' : 'error'}\n        />\n        <Task\n          state={fileList === null ? 'loading' : 'success'}\n          label=\"defining file to check\"\n          status={fileList === null ? null : `${fileList.length} files`}\n        />\n        <Task\n          state={results === null ? 'loading' : 'success'}\n          label=\"checking current files\"\n          status={`${checkedFileCount}/${fileList === null ? '?' : fileList.length} files`}\n        />\n        <Task\n          state={finalResult === null ? 'loading' : 'success'}\n          label={`checking and comparing with ${revision} files`}\n          status={`${checkedRevisionFileCount}/${fileList === null ? '?' : fileList.length} files`}\n        />\n      </TaskList>\n\n      {isConfigValidated === false && (\n      <Text color=\"red\">Error during config</Text>\n      )}\n\n      { finalResult !== null && <ResultsCompare results={finalResult} outputHtml={outputHtml} />}\n    </>\n  );\n}\n\nCompare.propTypes = {\n  revision: PropTypes.string.isRequired,\n \tcollectFrom: PropTypes.string,\n  rule: PropTypes.string,\n  tags: PropTypes.array,\n  config: PropTypes.string,\n  htmlReport: PropTypes.bool,\n};\n\nCompare.shortFlags = {\n  rule: 'r',\n  tags: 't',\n \tcollectFrom: 'g',\n  config: 'c',\n};\n\nexport default Compare;\n"]}