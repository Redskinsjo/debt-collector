{"version":3,"sources":["../lib/config/getConfigPath.ts","../lib/utils/truncateString.ts","../lib/utils/mergeAndDedupArrays.ts","../lib/utils/useArrayForStringKeys.ts","../lib/utils/filterIgnoredFiles.ts","../lib/utils/cleanTagFilterParam.ts","../lib/utils/getConfigRuleById.ts","../lib/utils/index.ts","../lib/config/sanitizeConfig.ts","../lib/config/validateConfig.ts","../lib/config/useValidatedConfig.ts","../lib/config/index.ts","../lib/git/gitUtils.ts","walkDryRun/index.tsx"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import path from 'path'\n\nconst getConfigPath = (config) =>\n  config\n    ? path.relative(process.cwd(), config)\n    : path.relative(process.cwd(), './debt-collector.config.js')\n\nexport default getConfigPath\n","const truncateString = (str: string, max: number): string => {\n  if (str.length < max) return str\n  const charArr = str.split('')\n  const strStart = [...charArr].filter((_char, i) => i >= 0 && i < max / 2)\n  const strEnd = [...charArr].filter(\n    (_char, i) => i > str.length - max / 2 && i < str.length\n  )\n  return [...strStart, '....', ...strEnd].join('')\n}\n\nexport default truncateString\n","const mergeAndDedupArrays = <T>(...args: T[][]): T[] => {\n  const fusioned: T[] = args.reduce((acc, array) => acc.concat(array), [])\n  return [...new Set(fusioned)]\n}\n\nexport default mergeAndDedupArrays\n","const useArrayForStringKeys = (keys: string[], obj: any) => {\n  const returnObj = obj\n\n  keys.forEach((key) => {\n    if (returnObj[key] && typeof returnObj[key] === 'string') {\n      returnObj[key] = [returnObj[key]]\n    }\n    if (!returnObj[key]) {\n      returnObj[key] = []\n    }\n  })\n\n  return returnObj\n}\nexport default useArrayForStringKeys\n","import minimatch from 'minimatch'\n\nconst filterIgnoredFiles = (\n  files: string[],\n  ignoredFiles: string[],\n  includedFiles: string[]\n): string[] =>\n  files.filter((file) => {\n    const matchGlob = (glob: string): boolean =>\n      minimatch(file, glob.replace(/^\\.\\//, ''))\n\n    const isFileIgnored = ignoredFiles.some(matchGlob)\n    const isFileIncluded = includedFiles.some(matchGlob)\n    return !isFileIgnored && isFileIncluded\n  })\n\nexport default filterIgnoredFiles\n","type Tag = string | undefined\n\nconst cleanTagFilterParam = (tagsParam: Tag[]) =>\n  tagsParam\n    ? tagsParam?.filter((tag: string | undefined) => tag !== undefined)\n    : []\n\nexport default cleanTagFilterParam\n","import { EslintRule, FileRule, Config } from '../types'\n\nconst getConfigRuleById = (\n  config: Config,\n  id: string\n): FileRule | EslintRule => {\n  const fileRules = config.fileRules || []\n  const eslintRules = config.eslintRules || []\n  const rules = [...fileRules, ...eslintRules]\n  return rules.find((rule) => rule.id === id)\n}\n\nexport default getConfigRuleById\n","export { default as truncateString } from './truncateString'\nexport { default as mergeAndDedupArrays } from './mergeAndDedupArrays'\nexport { default as useArrayForStringKeys } from './useArrayForStringKeys'\nexport { default as filterIgnoredFiles } from './filterIgnoredFiles'\nexport { default as cleanTagFilterParam } from './cleanTagFilterParam'\nexport { default as getConfigRuleById } from './getConfigRuleById'\n","import type { ValidateConfigReturn } from './validateConfig'\nimport { useArrayForStringKeys } from '../utils'\n\nconst initialiseRules = (\n  validatedConfig: ValidateConfigReturn\n): ValidateConfigReturn => {\n  const returnValues = validatedConfig\n  const config = returnValues.sanitizedConfig\n\n  returnValues.sanitizedConfig = useArrayForStringKeys(\n    ['include', 'exclude'],\n    config\n  )\n\n  const defaultFileRuleConfig = {\n    include: '**/*',\n    matchRule: () => 1,\n  }\n\n  const defaultEslintRuleConfig = {\n    include: '**/*',\n  }\n\n  let fileRules = null\n\n  if (config.fileRules?.length > 0) {\n    fileRules = config.fileRules.map((rule) => {\n      let sanitizedRule = {\n        ...defaultFileRuleConfig,\n        ...rule,\n      }\n\n      sanitizedRule = useArrayForStringKeys(\n        ['include', 'exclude', 'tags'],\n        sanitizedRule\n      )\n\n      return sanitizedRule\n    })\n  }\n\n  let eslintRules = null\n\n  if (config.eslintRules?.length > 0) {\n    eslintRules = config.eslintRules.map((rule) => {\n      let sanitizedRule = {\n        ...defaultEslintRuleConfig,\n        ...rule,\n      }\n\n      sanitizedRule = useArrayForStringKeys(\n        ['include', 'exclude', 'tags'],\n        sanitizedRule\n      )\n\n      return sanitizedRule\n    })\n  }\n\n  if (fileRules) {\n    returnValues.sanitizedConfig.fileRules = fileRules\n  }\n\n  if (eslintRules) {\n    returnValues.sanitizedConfig.eslintRules = eslintRules\n  }\n\n  return returnValues\n}\n\nexport default initialiseRules\n","import path from 'path'\nimport { Config, UserConfig } from './config'\nimport sanitizeConfig from './sanitizeConfig'\n\nexport type ValidateConfigReturn = {\n  isConfigValid: boolean\n  sanitizedConfig: Config | null\n  configErrors: string[]\n  userConfig: UserConfig | null\n}\n\nconst validateConfig = async (configPath): Promise<ValidateConfigReturn> => {\n  let config: undefined | Config\n\n  const returnValues = {\n    isConfigValid: true,\n    sanitizedConfig: null,\n    userConfig: null,\n    configErrors: [],\n  }\n\n  try {\n    const importedConfig = await import(`${process.cwd()}/${configPath}`)\n    config = importedConfig.default\n    returnValues.sanitizedConfig = config\n    returnValues.userConfig = config\n  } catch (e) {\n    returnValues.isConfigValid = false\n    returnValues.configErrors.push(\n      `Impossible to load a valid config file at ${configPath}, create a config file or provide a path to a valid config using the \"--config\" flag`\n    )\n    return returnValues\n  }\n\n  const hasIncludeKey = !!config.include\n  const hasFileRules = !!config.fileRules\n  const hasEslintRules = !!config.eslintRules\n  const hasEslintConfigPath = !!config.eslintConfigPath\n  const hasSomeRules = hasFileRules || hasEslintRules\n\n  if (!hasIncludeKey) {\n    returnValues.isConfigValid = false\n    returnValues.configErrors.push(\n      'Provide a \"include\" key with a glob pattern in your configuration ex: \"./**/*\"'\n    )\n  }\n\n  if (!hasSomeRules) {\n    returnValues.isConfigValid = false\n    returnValues.configErrors.push(\n      'Your config does not have any rules, please create \"fileRules\" or/and \"eslintRules\"'\n    )\n  }\n\n  if (hasEslintRules && !hasEslintConfigPath) {\n    returnValues.isConfigValid = false\n    returnValues.configErrors.push(\n      'You provided \"eslintRules\" but no path to an eslint config file'\n    )\n  }\n\n  if (!hasEslintRules && hasEslintConfigPath) {\n    returnValues.isConfigValid = false\n    returnValues.configErrors.push(\n      'You provided a a path to an eslint config but no \"eslintRules\"'\n    )\n  }\n\n  // TODO : validate individual rules\n  // - unique ID\n  // - include either an include key or a matchRule\n\n  if (hasEslintConfigPath && hasEslintRules) {\n    try {\n      // eslint-disable-next-line global-require, import/no-dynamic-require\n      returnValues.sanitizedConfig.eslintConfig = require(path.resolve(\n        process.cwd(),\n        config.eslintConfigPath\n      ))\n    } catch (e) {\n      returnValues.isConfigValid = false\n      returnValues.configErrors.push(\n        'Impossible to load the eslint config file'\n      )\n    }\n  }\n\n  return sanitizeConfig(returnValues)\n}\n\nexport default validateConfig\n","import { useEffect, useState } from 'react'\nimport { UserConfig, Config } from '../types'\nimport getConfigPath from './getConfigPath'\nimport validateConfig from './validateConfig'\n\nconst useValidatedConfig = (\n  config?: string\n): {\n  isConfigValid: boolean | null\n  sanitizedConfig: Config | null\n  configErrors: string[] | null\n  userConfig: UserConfig | null\n} => {\n  const [isConfigValid, setIsConfigValid] = useState<boolean | null>(null)\n  const [sanitizedConfig, setSanitizedConfig] = useState<Config | null>(null)\n  const [configErrors, setConfigErrors] = useState<string[] | null>(null)\n  const [userConfig, setUserConfig] = useState<UserConfig | null>(null)\n\n  useEffect(() => {\n    ;(async () => {\n      const configPath = getConfigPath(config)\n      try {\n        const {\n          isConfigValid: isValid,\n          sanitizedConfig: cleanConfig,\n          configErrors: errors,\n          userConfig: baseConfig,\n        } = await validateConfig(configPath)\n\n        setUserConfig(baseConfig)\n        setSanitizedConfig(cleanConfig)\n        setIsConfigValid(isValid)\n        setConfigErrors(errors)\n      } catch (e) {\n        setIsConfigValid(false)\n        setConfigErrors([e.message])\n      }\n    })()\n  }, [])\n\n  return {\n    isConfigValid,\n    sanitizedConfig,\n    configErrors,\n    userConfig,\n  }\n}\n\nexport default useValidatedConfig\n","export { default as useValidatedConfig } from './useValidatedConfig'\n","/* eslint-disable no-await-in-loop, no-restricted-syntax */\nimport path from 'path'\nimport simpleGit, { SimpleGit } from 'simple-git'\nimport type { GitRevision, RevisionResults } from '../types'\n\nconst gitOptions = {\n  baseDir: process.cwd(),\n  binary: 'git',\n  maxConcurrentProcesses: 6,\n}\n\nconst git: SimpleGit = simpleGit(gitOptions)\n\nexport const getIsHistoryDirty = async (): Promise<boolean> => {\n  const status = await git.status()\n  return status.files.length > 0\n}\n\nfunction timeout(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nexport const checkoutTo = async (revision: string): Promise<void> => {\n  await git.checkout([revision])\n  // we need to make sure that file system is ready to be used, and finished the checkout\n  await timeout(1000)\n}\n\nexport const getCurrentBranch = async (): Promise<string> => {\n  const currentBranch = await git.revparse(['--abbrev-ref', 'HEAD'])\n  return currentBranch\n}\nexport const execWalkCommand = async (command: string): Promise<string> =>\n  git.raw(command.replace('git ', '').split(' '))\n\nexport const getRevList = async (\n  command: string,\n  parser: (result: string) => string[],\n  limit = 10\n): Promise<string[]> => {\n  const commandResult = await git.raw(command.replace('git ', '').split(' '))\n  const result = parser(commandResult)\n  return result.slice(0, limit)\n}\n\ntype OnCommitChange<IteratorResult> = ({\n  rev,\n  index,\n  previousResult,\n}: {\n  rev: GitRevision\n  index: number | null\n  previousResult: WalkIteratorResult<IteratorResult> | null\n}) => Promise<IteratorResult>\n\nexport type WalkIteratorResult<IteratorResult> = {\n  rev: GitRevision\n  results: IteratorResult | null\n}\n\nexport const walkCommits = async <FinalResult, IteratorResult>(\n  revList: GitRevision[],\n  {\n    onCommitChange,\n    onError,\n    onEnd,\n  }: {\n    onCommitChange: OnCommitChange<IteratorResult>\n    onEnd: (\n      result: WalkIteratorResult<IteratorResult>[]\n    ) => Promise<FinalResult>\n    onError: (error: string) => void\n  }\n): Promise<FinalResult | null> => {\n  const isHistoryDirty = await getIsHistoryDirty()\n  const currentBranch = await getCurrentBranch()\n  let walkIteratorResults: WalkIteratorResult<IteratorResult>[] | null = null\n\n  if (isHistoryDirty) {\n    onError('You have uncommited changes, please commit or stash them')\n    return null\n  }\n\n  try {\n    // eslint-disable-next-line\n    for (const [index, rev] of revList.entries()) {\n      await git.checkout([rev.hash])\n      const previousResult = walkIteratorResults?.[index - 1] ?? null\n\n      const results = await onCommitChange({\n        rev,\n        index,\n        previousResult,\n      })\n\n      if (!walkIteratorResults) {\n        walkIteratorResults = []\n      }\n\n      walkIteratorResults.push({\n        rev,\n        results,\n      })\n    }\n  } catch (e) {\n    onError(e.message)\n    await checkoutTo(currentBranch)\n    console.log(e)\n    return null\n  }\n\n  await checkoutTo(currentBranch)\n  const results = await onEnd(walkIteratorResults)\n  return results\n}\n\nexport const getChangedFilesSinceRev = async (\n  rev: string\n): Promise<{ status: string; filePath: string }[]> => {\n  const results = await git.diff([rev, '--name-status', '--no-renames'])\n  const rootGitDir = await git.revparse(['--show-toplevel'])\n  const currentGitDir = path.relative(rootGitDir, process.cwd())\n\n  const changedFilesSinceRev = results\n    .replace(/\\t/g, '|')\n    .split('\\n')\n    .filter((item) => item !== '')\n    .map((item) => {\n      const [status, filePath] = item.split('|')\n\n      return {\n        status,\n        filePath: path.relative(currentGitDir, filePath),\n      }\n    })\n\n  return changedFilesSinceRev\n}\n","import PropTypes from 'prop-types';\nimport React, {useEffect, useState} from 'react';\nimport { TaskList, Task } from 'ink-task-list';\nimport fs from 'fs';\nimport path from 'path';\nimport { Text } from 'ink';\nimport getFilesList from '../../lib/filters/getFilesList';\nimport checkFileList from '../../lib/results/checkFileList';\nimport { useValidatedConfig } from '../../lib/config';\nimport buildWalkReport from '../../lib/reporters/buildWalkReport';\nimport getTagListFromConfig from '../../lib/config/getTagListFromConfig';\nimport {execWalkCommand, getRevList} from '../../lib/git/gitUtils';\n\nfunction Walk({\n  revlength = 10,\n  config,\n  include = null,\n}) {\n  const [results, setResults] = useState(null);\n  const [parsedResult, setParsedResult] = useState(null);\n  const [currentCommit, setCurrentCommit] = useState({ commit: '', index: 0 });\n  const [isReady, setIsReady] = useState(false);\n  const [tags, setTags] = useState({});\n\n  const {\n    isConfigValid,\n    sanitizedConfig,\n    configErrors,\n    userConfig,\n  } = useValidatedConfig(config);\n\n  useEffect(() => {\n      if(\n          isConfigValid \n          && sanitizedConfig?.walkConfig?.gitCommand \n          && sanitizedConfig?.walkConfig?.parser\n          && sanitizedConfig?.walkConfig?.limit\n        ) {\n          (async () => {\n              const { gitCommand, parser, limit } = sanitizedConfig.walkConfig;\n              const revList = await getRevList(gitCommand, parser, limit);\n              const result = await execWalkCommand(gitCommand);\n              const parsedResults = parser(result);\n              const limitedParsedResults = parsedResults.slice(0, sanitizedConfig.walkConfig.limit);\n              \n              setResults(`${result.substring(0, 2000)}...`);\n              setParsedResult(limitedParsedResults);\n          })();\n      }\n  }, [isConfigValid])\n\n  return (\n    <>\n    <Text />\n    <Text bold backgroundColor=\"red\">Truncated result of the command : </Text>\n    <Text>{results}</Text>\n    <Text />\n    <Text bold backgroundColor=\"red\">Result of the parser with limit : </Text>\n    <Text>{JSON.stringify(parsedResult, null, 2)}</Text>\n    </>\n  );\n}\n\nWalk.propTypes = {\n  revlength: PropTypes.number,\n  config: PropTypes.string,\n  include: PropTypes.string,\n};\n\nWalk.shortFlags = {\n  revlength: 'n',\n  config: 'c',\n  include: 'f',\n};\n\nexport default Walk;\n"]}