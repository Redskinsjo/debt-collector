{"version":3,"sources":["../lib/getFilesList.ts","../lib/filterRules.ts","../lib/getfileRulesErrors.ts","../lib/getEslintRulesErrors.ts","../lib/getFileResult.ts","../lib/checkFileList.ts","../lib/utils.ts","../lib/validateConfig.ts","../lib/useValidatedConfig.ts","../lib/template.ts","../lib/buildWalkReport.ts","../lib/getTagListFromConfig.ts","walk/index.tsx"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import glob from 'glob'\nimport simpleGit from 'simple-git\nimport path from 'path\nimport minimatch from 'minimatch'\n\n\nconst gitOptions = {\n   baseDir: process.cwd(),\n   binary: 'git',\n   maxConcurrentProcesses: 6,\n};\n\nconst getFileList = async (config, compare, globOption) => {\n  const globFilter = globOption ? globOption : config.collectFrom\n  \n  if (compare) {\n    return new Promise(async (resolve, reject) => {\n      const git = simpleGit(gitOptions)\n      const rootGitDir = await git.revparse(['--show-toplevel'])\n      const results = await git.diff([compare, '--name-status'])\n      const currentGitDir = path.relative(rootGitDir, process.cwd())\n      const filesAndStatuses = results\n        .replace(/\\t/g, '|')\n        .split('\\n')\n        .filter(item => item !== '')\n        .map(item => {\n          const [status, filePath] = item.split('|')\n\n          return {\n            status,\n            filePath: path.relative(currentGitDir, filePath)\n          }\n        })\n      \n      const files = filesAndStatuses.filter((file) => minimatch(\n        file.filePath,\n        globFilter.replace('./', '')\n      )).map((item) => item.filePath)\n\n      resolve(files)\n    })\n  }\n\n  return new Promise((resolve, reject) => {\n    glob(globFilter, {}, (err, files) => {\n      if (err) reject(err)\n      const filteredFiles = files.map((file) => file.replace('./', '')).filter(file => file.includes('.'))\n      resolve(filteredFiles)\n    })\n  })\n}\n\nexport default getFileList","import minimatch from 'minimatch';\n\nconst doesMatchPath = ({ matchGlob = '**/*' }, file) => {\n  if (typeof matchGlob === 'string') {\n    return minimatch(\n      file.replace('./', ''),\n      matchGlob.replace('./', ''),\n    );\n  }\n\n  if (Array.isArray(matchGlob)) {\n    return matchGlob.filter((glob) => minimatch(\n      file.replace('./', ''),\n      glob.replace('./', ''),\n    )).length > 0;\n  }\n};\n\nexport const getRulesForFile = (options, filePath) => {\n  const fileRules = options.fileRules.filter((rule) => doesMatchPath(rule, filePath));\n  const eslintRules = options.eslintRules.filter((rule) => doesMatchPath(rule, filePath));\n\n  return {\n    fileRules,\n    eslintRules,\n  };\n};\n\nconst getRules = (rules, ruleId, tags) => rules\n  .filter((rule) => (ruleId\n    ? ruleId === rule.id\n    : true)).filter((rule) => ((tags && tags.length > 0)\n    ? tags.some((tag) => rule.tags.includes(tag))\n    : true));\n\nexport const filtersRulesFromOptions = (options, ruleId = null, tags = null) => {\n  let { fileRules } = options;\n  let { eslintRules } = options;\n  const cleanTag = tags && tags.filter((tag) => !!tag);\n\n  if (ruleId || cleanTag?.length) {\n    fileRules = getRules(options.fileRules, ruleId, cleanTag);\n    eslintRules = getRules(options.eslintRules, ruleId, cleanTag);\n  }\n\n  return {\n    fileRules,\n    eslintRules,\n  };\n};\n","import escapeStringRegexp from 'escape-string-regexp-node'\n\nconst getFileRulesErrors = (config, file, data) => {\n  const directoryDepth = file.replace('./').split('/')\n  directoryDepth.splice(-1)\n\n  const isImportingFrom = (str) => {\n    const regexp = new RegExp(escapeStringRegexp(`from '${str}`), 'g')\n    const res = data.matchAll(regexp)\n    const resArr = Array.from(res, m => m[0])\n\n    return resArr.length\n  }\n  \n  const find = (str) => {\n    const regexp = new RegExp(escapeStringRegexp(str), 'g')\n    const res = data.matchAll(regexp)\n    const resArr = Array.from(res, m => m[0])\n\n    return resArr.length\n  }\n  \n  const utils = {\n    directoryDepth: directoryDepth.length,\n    content: data,\n    file,\n    isImportingFrom,\n    find,\n  }\n      \n  return config.fileRules.reduce((acc, rule) => {    \n    const nbErrors = rule.matchRule({...utils})\n\n    if (nbErrors > 0) {\n      return [\n        ...acc,\n        {\n          resultId: rule.id,\n          occurences: nbErrors\n        }\n      ]\n    } else {\n      return acc\n    }\n  }, [])\n}\n\nexport default getFileRulesErrors","const getEslintRulesErrors = async (config, file, data, eslint) => {\n  let results;\n  try {\n    results = await eslint.lintText(data, { warnIgnored: true });\n  } catch (err) {\n    results = [];\n  }\n\n  const errors = results[0]?.messages;\n\n  const containRuleIdMessage = (ruleId) => errors?.filter((err) => err.ruleId === ruleId).length ?? 0;\n  const containMessageFromPlugin = (ruleId) => {\n    if (errors.length > 0) {\n      const nonNullError = errors\n        .filter((err) => err !== null && err.ruleId !== null)\n        .filter((err) => err.ruleId.startsWith(ruleId));\n\n      return nonNullError.length;\n    }\n\n    return 0;\n  };\n\n  const utils = {\n    containRuleIdMessage,\n    containMessageFromPlugin,\n    results: results[0],\n    file,\n  };\n\n  return config.eslintRules.reduce((acc, rule) => {\n    const nbErrors = rule.matchESLintRule({ ...utils });\n\n    return nbErrors > 0 ? [\n      ...acc,\n      {\n        resultId: rule.id,\n        occurences: nbErrors,\n      },\n    ] : acc;\n  }, []);\n};\n\nexport default getEslintRulesErrors;\n","import { getRulesForFile } from './filterRules';\nimport getfileRulesErrors from './getfileRulesErrors';\nimport getEslintRulesErrors from './getEslintRulesErrors';\n\nconst fs = require('fs');\n\nconst updateResults = (config, fileErrors, fileResults, ruleName) => {\n  const updatedFileResults = {\n    ...fileResults,\n  };\n  if (fileErrors.length > 0) {\n    fileErrors.forEach(({ resultId, occurences }) => {\n      const rule = config[ruleName].find(({ id }) => resultId === id);\n\n      updatedFileResults.rules.push({\n        ...rule,\n        occurences,\n      });\n\n      updatedFileResults.totalScore += rule.debtScore * occurences;\n    });\n  }\n  return updatedFileResults;\n};\n\nconst runFileChecks = async (config, file, eslint) => {\n  let fileResults = {\n    file,\n    rules: [],\n    totalScore: 0,\n  };\n\n  if (config.eslintRules.length === 0 && config.fileRules.length === 0) {\n    return fileResults;\n  }\n\n  let data;\n\n  try {\n    data = fs.readFileSync(file).toString();\n  } catch (error) {\n    data = '';\n  }\n\n  const fileRulesResults = getfileRulesErrors(config, file, data);\n  fileResults = updateResults(\n    config,\n    fileRulesResults,\n    fileResults,\n    'fileRules',\n  );\n\n  const eslintResults = await getEslintRulesErrors(config, file, data, eslint);\n\n  fileResults = updateResults(\n    config,\n    eslintResults,\n    fileResults,\n    'eslintRules',\n  );\n\n  return fileResults;\n};\n\nconst getFileResult = async (config, file, incrementCounter, eslint) => {\n  const rulesForFile = getRulesForFile(config, file);\n  const fileResult = await runFileChecks(\n    {\n      ...config,\n      ...rulesForFile,\n    },\n    file,\n    eslint,\n  );\n\n  incrementCounter();\n\n  return fileResult;\n};\n\nexport default getFileResult;\n","import { ESLint } from 'eslint';\nimport path from 'path';\nimport getFileResult from '../lib/getFileResult';\nimport { filtersRulesFromOptions } from '../lib/filterRules';\n\nexport default async (fileList, config, rule, tags, increment) => {\n  const filteredRules = filtersRulesFromOptions(config, rule, tags);\n\n  const fileListConfig = {\n    ...config,\n    ...filteredRules,\n  };\n\n  const\teslint = new ESLint({\n    useEslintrc: false,\n    baseConfig: config.eslintConfig,\n  });\n\n  const getFilesResults = fileList.map((file) => getFileResult(fileListConfig, file, increment, eslint));\n  const results = await Promise.all([...getFilesResults]);\n\n  return results;\n};\n","import path from 'path';\n\nexport const getConfigPath = (config) => (config\n  ? path.relative(process.cwd(), config)\n  : path.relative(process.cwd(), './debt-collector.config.js'));\n","import path from 'path';\n\nconst defaultFileRuleConfig = {\n  matchGlob: '**/*',\n  matchRule: () => 1,\n};\n\nconst defaultEslintRuleConfig = {\n  matchGlob: '**/*',\n};\n\nconst validateConfig = async (configPath: string) => {\n  let config;\n\n  try {\n    config = await import(`${process.cwd()}/${configPath}`);\n  } catch (e) {\n    return {\n      isConfigValid: false,\n      verifiedConfig: {},\n      eslintConfig: null,\n      configErrors: [\n        `Impossible to load a valid config file at ${configPath}, create a config file or provide a path to a valid config using the \"--config\" flag`,\n      ],\n    };\n  }\n\n  const returnValues = {\n    isConfigValid: true,\n    verifiedConfig: config.default,\n    defaultConfig: config.default,\n    eslintConfig: null,\n    configErrors: [],\n  };\n\n  const hasCollectFromKey = !!config.collectFrom;\n  const hasFileRules = !!config.fileRules;\n  const hasEslintRules = !!config.eslintRules;\n  const hasEslintConfigPath = !!config.eslintConfigPath;\n  const hasSomeRules = hasFileRules || hasEslintRules;\n  const hasEslintRulesAndPathToConfig = hasEslintRules && hasEslintConfigPath;\n\n  if (!hasCollectFromKey || !hasSomeRules || !hasEslintRulesAndPathToConfig) {\n    returnValues.isConfigValid = false;\n\n    if (!hasCollectFromKey) {\n      returnValues.configErrors.push(\n        'Provide a \"collectFrom\" key with a glob pattern in your configuration ex: \"./**/*\"',\n      );\n    }\n\n    if (!hasSomeRules) {\n      returnValues.configErrors.push(\n        'Your config does not have any rules, please create \"fileRules\" or/and \"eslintRules\"',\n      );\n    }\n\n    if (!hasEslintRulesAndPathToConfig) {\n      returnValues.configErrors.push(\n        'You provided \"eslintRules\" but no path to an eslint config file',\n      );\n    }\n  }\n\n  const fileRules = config.fileRules.map((rule) => ({\n    ...defaultFileRuleConfig,\n    ...rule,\n  }));\n\n  const eslintRules = config.eslintRules.map((rule) => ({\n    ...defaultEslintRuleConfig,\n    ...rule,\n  }));\n\n  // TODO : validate individual rules\n\n  if (hasEslintConfigPath) {\n    try {\n      returnValues.verifiedConfig.eslintConfig = require(\n        path.resolve(process.cwd(), config.default.eslintConfigPath),\n      );\n    } catch (e) {\n      return {\n        isConfigValid: false,\n        verifiedConfig: {},\n        eslintConfig: null,\n        configErrors: [\n          'Impossible to load the eslint config file',\n        ],\n      };\n    }\n  }\n\n  return {\n    ...returnValues,\n    verifiedConfig: {\n      ...returnValues.verifiedConfig,\n      eslintRules,\n      fileRules,\n    },\n  };\n};\n\nexport default validateConfig;\n","import { useEffect, useState } from 'react';\nimport { getConfigPath } from './utils';\nimport validateConfig from './validateConfig';\n\nconst useValidatedConfig = (config) => {\n  const [isConfigValidated, setIsConfigValidated] = useState(null);\n  const [updatedConfig, setUpdatedConfig] = useState(null);\n  const [configErrors, setConfigErrors] = useState(null);\n  const [defaultConfig, setDefaultConfig] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      const configPath = getConfigPath(config);\n      const {\n        isConfigValid, verifiedConfig, configErrors, defaultConfig,\n      } = await validateConfig(configPath);\n      setDefaultConfig(defaultConfig);\n      setUpdatedConfig(verifiedConfig);\n      setIsConfigValidated(isConfigValid);\n      setConfigErrors(configErrors);\n    })();\n  }, []);\n\n  return {\n    isConfigValidated,\n    updatedConfig,\n    configErrors,\n    defaultConfig,\n  };\n};\n\nexport default useValidatedConfig;\n","export default (data) => `\n\n<!DOCTYPE html>\n<html>\n<head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.14.0/babel.min.js\"></script>\n    <script type=\"text/babel\" data-presets=\"es2017, stage-3\" data-plugins=\"syntax-async-functions,transform-class-properties\"></script>\n    <script src=\"https://unpkg.com/react/umd/react.production.min.js\"></script>\n    <script src=\"https://unpkg.com/react-dom/umd/react-dom.production.min.js\"></script>\n    <script src=\"https://unpkg.com/prop-types/prop-types.min.js\"></script>\n    <script src=\"https://unpkg.com/recharts/umd/Recharts.js\"></script>\n     <style type=\"text/css\">\n      body {\n        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n      }\n    </style>\n</head>\n<body>\n<div id=\"app\"></div>\n<script type=\"text/babel\">\n\nconst result = ${data}\nconst { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } = window.Recharts\n\nconst parseDataBy = (key) => Object.keys(result.results).map((commit) => {\n  const rulesScores = Object.keys(result.results[commit]).map(rule => ({\n    [rule]: result.results[commit][rule][key]\n  })).reduce((acc, res) => ({...acc, ...res}), {})\n  \n  return {\n    commit,\n    ...rulesScores\n  }\n})\n\nfunction getRandomColor() {\n  var letters = '0123456789ABCDEF';\n  var color = '#';\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nfunction shadeColor(color, percent) {\n  const channel = (chan) => {\n    let colChan = parseInt(chan, 16);\n    colChan = parseInt(colChan * (100 + percent) / 100);\n    colChan = colChan < 255 ? colChan : 255;\n    colChan = colChan.toString(16).length === 1 \n      ? \"0\" + colChan.toString(16)\n      : colChan.toString(16);\n    return colChan\n  }\n\n  const RR = channel(color.substring(1,3));\n  const GG = channel(color.substring(3,5));\n  const BB = channel(color.substring(5,7));\n\n  return \"#\"+RR+GG+BB;\n}\n\nconst colors = Array(100).fill('').map(() =>  shadeColor(getRandomColor(), -20))\nconst newData = parseDataBy('score')\n\nconst baseButtonStyles = {\n  padding: 4,\n  textAlign: 'left',\n  marginBottom: 6,\n  marginRight: 6,\n  border: 'none',\n  outline: 'none', \n  fontWeight: 'bold',\n}\n\nconst rules = Object.keys(newData[0]).filter(key => key !== 'commit')\nconst rulesActives = rules.reduce((acc, rule) => {\n  acc[rule] = true\n  return acc\n}, {})\n\n const App = () => {\n   const [data, setData] = React.useState(newData)\n   const [valueType, setValueType] = React.useState('score')\n   const [activeRules, setActiveRules] = React.useState(rulesActives)\n   const [tagFilter, setTagFilter] = React.useState(null)\n   \n   const toggleRule = (id) => {\n    setTagFilter(null)\n    setActiveRules(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }))\n   }\n\n   const switchDataBy = (key) => {\n      setValueType(key)\n      setData(parseDataBy(key))\n   }\n\n   const toggleAll = () => {\n     setTagFilter(null)\n     setActiveRules(prev => {\n       const rulesKeys = Object.keys(prev)\n       const firstIsActive = !!prev[rulesKeys[0]]\n       return rulesKeys.reduce((rules, rule) => {\n         rules[rule] = !firstIsActive\n         return rules\n       }, {})\n     })\n   }\n\n   const toggleTag = (tag) => {\n     if (tagFilter === null || tagFilter !== tag) {\n       setTagFilter(tag)\n     } else {\n       setTagFilter(null)\n     }\n   }\n\n   const renderTooltip = ({label, payload}) => {\n    if (!payload.length) { return null}\n   \n     return <div style={{ backgroundColor: 'white', padding: 15, borderRadius: 10, boxShadow: '0 0 10px rgba(0,0,0,0.2)' }}>\n        <h2 style={{ margin: 0, marginBottom: 5}}>{label}</h2>\n        <h3 style={{ margin: 0, marginBottom: 15}}>Total {valueType} : { \n        payload.reduce((acc, cur) => {\n          acc += Number(cur.value)\n          return acc\n        }, 0)\n        } </h3>\n        {payload.reverse().map(item => (\n          <div key={item.dataKey} style={{ display: 'flex', justifyContent:'center', fontSize: 12, marginBottom: 4}}>\n            <span style={{ backgroundColor: item.color, display: 'inline-block', width: 15, height: 15, borderRadius: 3, marginRight: 7}}></span>\n            <div style={{ flex: 1, marginRight: 25}}>\n              <span>{item.name.replace(/_/g, ' ')}</span>\n            </div>\n            <span style={{ fontWeight: 'bold'}}>{item.value}</span>\n          </div>\n        ))}\n      </div>\n   }\n\n  React.useEffect(() => {\n    if (tagFilter) {\n      setActiveRules(rules => Object.keys(rules).reduce((acc, rule) => {\n        if (result.tags[tagFilter].includes(rule)) {\n          acc[rule] = true\n        } else {\n          acc[rule] = false\n        }\n        return acc\n      }, {}))\n    }\n  }, [tagFilter])\n   \n   return (\n     <div style={{display: 'flex', overflow: 'hidden', width: '100vw', height:'100vh', position:'fixed'}}>\n      <div style={{width: '80vw', height:'100vh'}}>\n        <ResponsiveContainer width=\"100%\" height=\"90%\">\n          <AreaChart\n            width={500}\n            height={400}\n            data={data}\n            margin={{\n              top: 10,\n              right: 30,\n              left: 0,\n              bottom: 0,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"commit\" />\n            <YAxis />\n            <Tooltip\n              content={renderTooltip} \n              itemStyle={{fontSize: 10, fontWeight: 'bold', fontFamily: 'sans-serif', height: 10, padding: 3}}\n              labelStyle={{fontSize: 16, fontWeight: 'bold', fontFamily: 'sans-serif'}}\n            />\n            {Object.keys(activeRules).map((rule, index) => activeRules[rule] && \n              <Area\n                type=\"monotone\"\n                dataKey={rule}\n                stackId=\"1\"\n                stroke={colors[Object.keys(activeRules).indexOf(rule)]}\n                fill={colors[Object.keys(activeRules).indexOf(rule)]} />\n            )}\n          </AreaChart>\n        </ResponsiveContainer>\n        </div>\n        <div style={{width: '20vw', minWidth: 400, height:'100vh', overflowY: 'auto', padding: 20}}>\n          <h3>Rules</h3>\n          {Object.keys(activeRules).map(rule => \n            <button \n              key={rule}\n              onClick={() => toggleRule(rule)}\n              style={{\n                ...baseButtonStyles,\n                backgroundColor: activeRules[rule] ? 'green' : '#F5F5F5',\n                color: activeRules[rule] ? 'white' : 'grey'\n              }}\n            >\n              {rule}\n            </button>\n          )}\n          <div style={{ marginTop: 15 }}>\n            <button onClick={() => toggleAll()}>TOGGLE ALL RULES</button>\n          </div>\n          <hr />\n          <h3>Tags</h3>\n          {Object.keys(result.tags).map(tag => \n            <button \n              key={tag}\n              onClick={() => toggleTag(tag)}\n              style={{\n                ...baseButtonStyles,\n                display: 'inline-block',\n                backgroundColor: tagFilter === tag ? 'green' : '#F5F5F5',\n                color: tagFilter === tag ? 'white' : 'grey'\n              }}\n            >\n              {tag}\n            </button>\n          )}\n          <hr />\n          <h3>Display values</h3>\n          <button \n            onClick={() => switchDataBy('score')}\n            style={{\n              ...baseButtonStyles,\n              display: 'inline-block',\n              backgroundColor: valueType === 'score' ? 'green' : '#F5F5F5',\n              color: valueType === 'score' ? 'white' : 'grey'\n            }}>\n              BY SCORE\n          </button>\n          <button \n            onClick={() => switchDataBy('occurences')}\n            style={{\n              ...baseButtonStyles,\n              display: 'inline-block',\n              backgroundColor: valueType === 'occurences' ? 'green' : '#F5F5F5',\n              color: valueType === 'occurences' ? 'white' : 'grey'\n            }}>\n              BY OCCURENCES\n          </button>\n          <hr />\n        </div>\n      </div>\n    );\n}\n\nReactDOM.render(<App/>, document.getElementById('app'));\n</script>\n</body>\n</html>\n`;\n","import fs from 'fs';\nimport { spawn } from 'child_process';\nimport template from './template';\n\nconst cachePath = `${process.cwd()}/node_modules/.cache/debt-collector`;\nconst resultPath = `${cachePath}/report.html`;\n\nconst buildWalkReport = (defaultConfig, tags, results) => {\n  setTimeout(() => {\n    // waiting for file system to correctly switch all files after checkout\n    const jsonResults = JSON.stringify({\n      initialConfig: defaultConfig,\n      tags,\n      results,\n    }, null, 2);\n\n    const data = template(jsonResults);\n\n    fs.mkdir(cachePath, { recursive: true }, (err) => {\n      if (err) throw err;\n\n      fs.writeFileSync(resultPath, data);\n\n      spawn('open', [resultPath]);\n    });\n  }, 330);\n};\n\nexport default buildWalkReport;\n","const getTagListFromConfig = (config) => {\n  const allRules = [\n    ...config.fileRules,\n    ...config.eslintRules,\n  ];\n\n  const tagList = allRules.reduce((acc, rule) => {\n    rule.tags.forEach((tag) => {\n      if (!acc[tag]) {\n        acc[tag] = [rule.id];\n      }\n\n      if (acc[tag] && !acc[tag].includes(rule.id)) {\n        acc[tag].push(rule.id);\n      }\n    });\n\n    return acc;\n  }, {});\n\n  return tagList;\n};\n\nexport default getTagListFromConfig;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text } from 'ink';\nimport { TaskList, Task } from 'ink-task-list';\nimport simpleGit from 'simple-git';\nimport fs from 'fs';\nimport path from 'path';\nimport getFilesList from '../../lib/getFilesList';\nimport checkFileList from '../../lib/checkFileList';\nimport useValidatedConfig from '../../lib/useValidatedConfig';\nimport buildWalkReport from '../../lib/buildWalkReport';\nimport getTagListFromConfig from '../../lib/getTagListFromConfig';\n\nconst gitOptions = {\n  baseDir: process.cwd(),\n  binary: 'git',\n  maxConcurrentProcesses: 6,\n};\n\nconst git = simpleGit(gitOptions);\nlet currentBranch;\n\nconst getCommitList = async (nth: number): Promise<string[]> => {\n  currentBranch = await git.revparse(['--abbrev-ref', 'HEAD']);\n  const list = await git.tag(['-l', 'v*.0.0', '--sort', 'v:refname', '--format', '%(refname:strip=2)']);\n\n  const listArray = list.split(/\\r?\\n/)\n    .reverse()\n    .filter((tag) => tag !== '')\n    .slice(0, nth)\n    .reverse();\n\n  return listArray;\n};\n\nconst formatCommitTotal = (config, results) => {\n  const configRules = [\n    ...config.fileRules.map((rule) => rule.id),\n    ...config.eslintRules.map((rule) => rule.id),\n  ].reduce(\n    (acc, id) => ({\n      ...acc,\n      [id]: {\n        score: 0,\n        occurences: 0,\n      },\n    }),\n    {},\n  );\n\n  Object.keys(results).forEach((file) => {\n    const currentFile = results[file];\n    if (currentFile.rules.length > 0) {\n      currentFile.rules.forEach(({ id, debtScore, occurences }) => {\n        configRules[id].score = configRules[id].score + debtScore * occurences;\n        configRules[id].occurences = configRules[id].occurences + occurences;\n      });\n    }\n  });\n\n  return configRules;\n};\n\nfunction Compare({\n  revlength = 10,\n  config,\n  collectFrom = null,\n}) {\n  const [results, setResults] = useState({});\n  const [currentCommit, setCurrentCommit] = useState({ commit: '', index: 0 });\n  const [isReady, setIsReady] = useState(false);\n  const [tags, setTags] = useState({});\n\n  const {\n    isConfigValidated,\n    updatedConfig,\n    configErrors,\n    defaultConfig,\n  } = useValidatedConfig(config);\n\n  useEffect(() => {\n    (async () => {\n      if (isConfigValidated) {\n        setTags(getTagListFromConfig(defaultConfig));\n\n        const commitsList = await getCommitList(revlength);\n        let previousResults;\n\n        for (const [index, commit] of commitsList.entries()) {\n          setCurrentCommit({ commit, index: index + 1 });\n          await git.checkout([commit]);\n          const since = index === 0 ? null : commitsList[index - 1];\n          const fileList = await getFilesList(updatedConfig, since, collectFrom);\n\t\t\t\t  const results = await checkFileList(fileList, updatedConfig, null, null, () => null);\n\n          let mergedResults = results.reduce((acc, res) => {\n            acc[res.file] = res;\n            return acc;\n          }, {});\n\n          if (previousResults) {\n            mergedResults = {\n              ...previousResults,\n              ...mergedResults,\n            };\n\n            mergedResults = Object.keys(mergedResults).reduce((acc, file) => {\n              const fileStillExist = fs.existsSync(path.resolve(process.cwd(), `./${file}`));\n\n              if (fileStillExist) {\n                acc[file] = mergedResults[file];\n              }\n\n              return acc;\n            }, {});\n          }\n\n          previousResults = mergedResults;\n\n          const resultsByRules = formatCommitTotal(defaultConfig, mergedResults);\n          setResults((prevRes) => ({ ...prevRes, [commit]: resultsByRules }));\n        }\n\n        await git.checkout([currentBranch]);\n        setIsReady(true);\n      }\n    })();\n  }, [isConfigValidated]);\n\n  useEffect(() => {\n    (async () => {\n      if (isReady) {\n        buildWalkReport(defaultConfig, tags, results);\n      }\n    })();\n  }, [isReady]);\n\n  return (\n    <TaskList>\n      <Task\n        state={!isReady ? 'loading' : 'success'}\n        label={`checking the last ${revlength} commits`}\n        status={`checking commit ${currentCommit.index}/${revlength} : ${currentCommit.commit}`}\n      />\n      <Task\n        state={!isReady ? 'pending' : 'loading'}\n        label=\"Building a report\"\n      />\n    </TaskList>\n  );\n}\n\nCompare.propTypes = {\n  revlength: PropTypes.number,\n  config: PropTypes.string,\n  collectFrom: PropTypes.string,\n};\n\nCompare.shortFlags = {\n  revlength: 'n',\n  config: 'c',\n  collectFrom: 'f',\n};\n\nexport default Compare;\n"]}